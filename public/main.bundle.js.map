{"version":3,"sources":["C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/$_gendir lazy","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/app.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/app.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/app.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/app.module.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-academic-year/add-academic-year.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-academic-year/add-academic-year.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-academic-year/add-academic-year.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-admin/add-admin.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-admin/add-admin.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-admin/add-admin.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-batch/add-batch.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-batch/add-batch.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-batch/add-batch.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-faculty/add-faculty.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-faculty/add-faculty.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-faculty/add-faculty.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-payment/add-payment.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-payment/add-payment.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-payment/add-payment.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-student/add-student.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-student/add-student.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-student/add-student.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/dashboard/dashboard.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/dashboard/dashboard.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/dashboard/dashboard.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/edit-batch/edit-batch.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/edit-batch/edit-batch.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/edit-batch/edit-batch.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/home/home.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/home/home.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/home/home.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/login/login.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/login/login.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/login/login.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/navbar/navbar.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/navbar/navbar.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/navbar/navbar.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/payment-history/payment-history.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/payment-history/payment-history.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/payment-history/payment-history.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/redirect/redirect.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/redirect/redirect.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/redirect/redirect.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/search-student/search-student.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/search-student/search-student.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/search-student/search-student.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/settings/settings.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/settings/settings.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/settings/settings.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/signup-student/signup-student.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/signup-student/signup-student.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/signup-student/signup-student.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/student-profile/student-profile.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/student-profile/student-profile.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/student-profile/student-profile.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/students-listing/students-listing.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/students-listing/students-listing.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/students-listing/students-listing.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/update-student/update-student.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/update-student/update-student.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/update-student/update-student.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/user-profile/user-profile.component.css","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/user-profile/user-profile.component.html","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/user-profile/user-profile.component.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/guards/auth.guard.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/pipes/SortGridPipe.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/auth.service.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/feesdetails.service.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/payment.service.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/settings.service.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/student.service.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/users.service.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/validate.service.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/environments/environment.ts","C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { AddStudentComponent } from './components/add-student/add-student.component';\r\nimport { UpdateStudentComponent } from './components/update-student/update-student.component';\r\nimport { StudentsListingComponent } from './components/students-listing/students-listing.component';\r\nimport { AddPaymentComponent } from './components/add-payment/add-payment.component';\r\nimport { PaymentHistoryComponent } from './components/payment-history/payment-history.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RedirectComponent } from './components/redirect/redirect.component';\r\nimport { StudentProfileComponent } from './components/student-profile/student-profile.component';\r\nimport { SignupStudentComponent } from './components/signup-student/signup-student.component';\r\nimport { UserProfileComponent } from './components/user-profile/user-profile.component';\r\n\r\nimport { AuthService } from \"./services/auth.service\";\r\nimport { UsersService } from \"./services/users.service\";\r\nimport { ValidateService } from \"./services/validate.service\";\r\nimport { PaymentService } from \"./services/payment.service\";\r\nimport { StudentService } from './services/student.service';\r\nimport { FeesdetailsService } from './services/feesdetails.service';\r\nimport { AddAdminComponent } from './components/add-admin/add-admin.component';\r\nimport { AddBatchComponent } from './components/add-batch/add-batch.component';\r\nimport { AddFacultyComponent } from './components/add-faculty/add-faculty.component';\r\nimport { AddAcademicYearComponent } from './components/add-academic-year/add-academic-year.component';\r\nimport { SettingsComponent } from './components/settings/settings.component';\r\n\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { SortGridPipe } from '../app/pipes/SortGridPipe';\r\nimport { SettingsService } from './services/settings.service';\r\nimport { EditBatchComponent } from './components/edit-batch/edit-batch.component';\r\nimport { SearchStudentComponent } from './components/search-student/search-student.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { pathMatch: 'full', path: '', component: HomeComponent },\r\n  { pathMatch: 'full', path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'studentprofile/:id', component: StudentProfileComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'addstudent/:id', component: AddStudentComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'updatestudent/:id', component: UpdateStudentComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'addPayment/:id', component: AddPaymentComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'paymenthistory/:id', component: PaymentHistoryComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'signup', component: SignupStudentComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'login', component: LoginComponent },\r\n  { pathMatch: 'full', path: 'redirect/:message', component: RedirectComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'studentslisting', component: StudentsListingComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'userprofile', component: UserProfileComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'addbatch', component: AddBatchComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'editbatch/:id', component: EditBatchComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'addfaculty', component: AddFacultyComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'addacademicyear', component: AddAcademicYearComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'settings', component: SettingsComponent, canActivate: [AuthGuard] },\r\n  { pathMatch: 'full', path: 'addadmin', component: AddAdminComponent },\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SortGridPipe,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    AddStudentComponent,\r\n    UpdateStudentComponent,\r\n    StudentsListingComponent,\r\n    AddPaymentComponent,\r\n    PaymentHistoryComponent,\r\n    LoginComponent,\r\n    RedirectComponent,\r\n    StudentProfileComponent,\r\n    UserProfileComponent,\r\n    SignupStudentComponent,\r\n    AddAdminComponent,\r\n    AddBatchComponent,\r\n    AddFacultyComponent,\r\n    AddAcademicYearComponent,\r\n    SettingsComponent,\r\n    EditBatchComponent,\r\n    SearchStudentComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    RouterModule.forRoot(appRoutes),\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    AuthService,\r\n    ValidateService,\r\n    UsersService,\r\n    StudentService,\r\n    PaymentService,\r\n    FeesdetailsService,\r\n    SettingsService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-academic-year/add-academic-year.component.css\n// module id = ../../../../../src/app/components/add-academic-year/add-academic-year.component.css\n// module chunks = main","module.exports = \"<div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\r\\n  {{error}}\\r\\n</div>\\r\\n\\r\\n<form ngNativeValidate class=\\\"form-signin\\\" id=\\\"needs-validation\\\" (submit)=\\\"onAddYearSubmit()\\\">\\r\\n  <h2 class=\\\"form-signin-heading\\\">Add Batch</h2>\\r\\n  <hr/>\\r\\n\\r\\n  <!-- Academic Year -->\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n      <label for=\\\"exampleSelect1\\\">Academic Year</label>\\r\\n      <select class=\\\"custom-select\\\" name=\\\"selectedYear\\\" [(ngModel)]=\\\"selectedYear\\\">\\r\\n        <option selected=\\\"\\\">Open this select year</option>\\r\\n        <option value=\\\"2017-18\\\">2017-18</option>\\r\\n        <option value=\\\"2018-19\\\">2018-19</option>\\r\\n      </select>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br/>\\r\\n  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Add</button>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-academic-year/add-academic-year.component.html\n// module id = ../../../../../src/app/components/add-academic-year/add-academic-year.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SettingsService } from \"../../services/settings.service\";\r\n\r\n@Component({\r\n  selector: 'app-add-academic-year',\r\n  templateUrl: './add-academic-year.component.html',\r\n  styleUrls: ['./add-academic-year.component.css']\r\n})\r\nexport class AddAcademicYearComponent implements OnInit {\r\n\r\n  selectedYear;\r\n  selectedYearText;\r\n  error;\r\n\r\n  constructor(\r\n    private settingsService : SettingsService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onAddYearSubmit(){\r\n    let newlyAddedYear = {\r\n      year: this.selectedYear,\r\n      isDeleted : false,\r\n      isCurrentYear: false\r\n    }\r\n\r\n    console.log(newlyAddedYear);\r\n\r\n    this.settingsService.addAcademicYear(newlyAddedYear).subscribe(year => {\r\n      if (year.success) {\r\n        this.router.navigate(['settings']);\r\n      } else {\r\n        this.error = year.msg.message;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-academic-year/add-academic-year.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-admin/add-admin.component.css\n// module id = ../../../../../src/app/components/add-admin/add-admin.component.css\n// module chunks = main","module.exports = \"<div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\r\\n  {{error}}\\r\\n</div>\\r\\n\\r\\n<p class=\\\"text-warning\\\"><strong>Note: </strong>OTP functionality to confirm admin user will be added later.</p>\\r\\n\\r\\n<form ngNativeValidate class=\\\"bd-callout bd-callout-yellow\\\" id=\\\"needs-validation\\\" ngNativeValidate (submit)=\\\"onAddAdminSubmit()\\\">\\r\\n  <fieldset>\\r\\n    <legend>Add Administrator</legend>\\r\\n    <hr/>\\r\\n\\r\\n    <!-- Name -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Name</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Branch</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"branch\\\" [(ngModel)]=\\\"branch\\\" id=\\\"chemburRdo\\\" value=\\\"Chembur\\\" checked> Chembur\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"branch\\\" [(ngModel)]=\\\"branch\\\" id=\\\"govandiRdo\\\" value=\\\"Govandi\\\"> Govandi\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"branch\\\" [(ngModel)]=\\\"branch\\\" id=\\\"mankhurdRdo\\\" value=\\\"Mankhurd\\\"> Mankhurd\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Email & birthday  -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-sm-12 col-md-4 col-lg-4\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Phone Number</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\" id=\\\"phoneNumber\\\" name=\\\"phoneNumber\\\" [(ngModel)]=\\\"phoneNumber\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-5 col-lg-5\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Email Address</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-3 col-lg-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Birth Date</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"date\\\" id=\\\"birthDate\\\" name=\\\"birthDate\\\" [(ngModel)]=\\\"birthDate\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-sm-12 col-md-6 col-lg-6\\\">\\r\\n        <label>Password</label>\\r\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-6 col-lg-6\\\">\\r\\n        <label>Confirm Password</label>\\r\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"confirmpassword\\\" name=\\\"confirmpassword\\\" class=\\\"form-control\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Sign Up</button>\\r\\n\\r\\n  </fieldset>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-admin/add-admin.component.html\n// module id = ../../../../../src/app/components/add-admin/add-admin.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { ValidateService } from \"../../services/validate.service\";\r\nimport { UsersService } from \"../../services/users.service\";\r\n\r\n@Component({\r\n  selector: 'app-add-admin',\r\n  templateUrl: './add-admin.component.html',\r\n  styleUrls: ['./add-admin.component.css']\r\n})\r\nexport class AddAdminComponent implements OnInit {\r\n\r\n  email;\r\n  error;\r\n  phoneNumber;\r\n  password;\r\n  name;\r\n  birthDate;\r\n  branch;\r\n  confirmpassword;\r\n\r\n  constructor(\r\n    private validateService: ValidateService,\r\n    private usersService: UsersService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onAddAdminSubmit() {\r\n\r\n    console.log(\"onAddAdminSubmit\");\r\n\r\n    if (this.password == this.confirmpassword) {\r\n\r\n      if (!this.validateService.validateEmail(this.email)) {\r\n        this.error = \"Invalid Email Address\";\r\n      }\r\n      else {\r\n\r\n        let newlyAddedUser = {\r\n          email: this.email,\r\n          birthDate: this.birthDate,\r\n          phoneNumber: this.phoneNumber,\r\n          name: this.name,\r\n          password: this.password,\r\n          role: \"Admin\",\r\n          branch: this.branch,\r\n          isAdmin: true,\r\n          isActive: false,\r\n          isDeleted: false\r\n        }\r\n\r\n        this.usersService.registerUser(newlyAddedUser).subscribe(user => {\r\n          if (user.success) {\r\n            this.router.navigate(['login']);\r\n          } else {\r\n            this.error = user.msg.message;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      this.error = \"Password and Confirm Password do not match.\";\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-admin/add-admin.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-batch/add-batch.component.css\n// module id = ../../../../../src/app/components/add-batch/add-batch.component.css\n// module chunks = main","module.exports = \"<div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\r\\n  {{error}}\\r\\n</div>\\r\\n\\r\\n\\r\\n<form ngNativeValidate class=\\\"bd-callout  bd-callout-yellow\\\" id=\\\"needs-validation\\\">\\r\\n  <fieldset>\\r\\n    <legend>Add Batch</legend>\\r\\n    <hr/>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Category</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"category\\\" [(ngModel)]=\\\"category\\\" id=\\\"categoryRdo\\\" value=\\\"School Section\\\"\\r\\n              checked> School Section\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\" *ngIf=\\\"branch != 'Mankhurd'\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"category\\\" [(ngModel)]=\\\"category\\\" id=\\\"categoryRdo\\\" value=\\\"College Section\\\"> College Section\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Academic Year</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <select id=\\\"academicyear\\\" class=\\\"custom-select\\\" name=\\\"year\\\" [(ngModel)]=\\\"year\\\">\\r\\n          <option *ngFor=\\\"let year of academicYears\\\" value=\\\"{{year.year}}\\\">{{year.year}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Stream If college section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"category == 'School Section'\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Medium</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"engRdo\\\" value=\\\"English\\\"> English\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"semiRdo\\\" value=\\\"Semi-English\\\"> Semi-English\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"marRdo\\\" value=\\\"Marathi\\\"> Marathi\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Stream If college section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"checkIfCollegeSection()\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Stream</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"sciRdo\\\" value=\\\"Science\\\"> Science\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"comRdo\\\" value=\\\"Commerce\\\"> Commerce\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"artsRdo\\\" value=\\\"Arts\\\"> Arts\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Enrolled for : options specific to school section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"category == 'School Section'\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Enrolled For</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"viiiRdo\\\" value=\\\"VIII\\\"> VIII\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"ixRdo\\\" value=\\\"IX\\\"> IX\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"ixAndxRdo\\\" value=\\\"IX + X\\\"> IX + X\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xRdo\\\" value=\\\"X\\\"> X\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Enrolled for : options specific to College section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"category == 'College Section'\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Enrolled For</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xiRdo\\\" value=\\\"XI\\\"> XI\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xiiRdo\\\" value=\\\"XII\\\"> XII\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xiAndxiiRdo\\\" value=\\\"XI + XII\\\"> XI + XII\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"stream == 'Science'\\\">\\r\\n      <div class=\\\"col-2\\\"></div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"noneRdo\\\" value=\\\"None\\\"> None\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"medicalEntRdo\\\" value=\\\"NEET\\\"> NEET\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"enggEntRdo\\\" value=\\\"MH-CET\\\"> MH-CET\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"bothEntRdo\\\" value=\\\"NEET + MH-CET\\\"> NEET + MH-CET\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showCourses()\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Course</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"courseRadios\\\" [(ngModel)]=\\\"course\\\" id=\\\"vacationRdo\\\" value=\\\"Vacation\\\"> Vacation\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"courseRadios\\\" [(ngModel)]=\\\"course\\\" id=\\\"regularRdo\\\" value=\\\"Regular\\\"> Regular\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Class Session -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Class Session</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" [(ngModel)]=\\\"classSession\\\" id=\\\"morningRdo\\\" value=\\\"Morning\\\"> Morning\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" [(ngModel)]=\\\"classSession\\\" id=\\\"evenRdo\\\" value=\\\"Evening\\\"> Evening\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Name</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <br/>\\r\\n    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onAddBatchSubmit()\\\">Add</button>\\r\\n  </fieldset>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-batch/add-batch.component.html\n// module id = ../../../../../src/app/components/add-batch/add-batch.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SettingsService } from \"../../services/settings.service\";\r\n\r\n@Component({\r\n  selector: 'app-add-batch',\r\n  templateUrl: './add-batch.component.html',\r\n  styleUrls: ['./add-batch.component.css']\r\n})\r\nexport class AddBatchComponent implements OnInit {\r\n\r\n  academicYears;\r\n  error;\r\n  name;\r\n  category;\r\n  course?: string = \"Regular\";\r\n  year;\r\n  entrance;\r\n  stream;\r\n  classSession;\r\n  enrolledFor;\r\n\r\n  constructor(\r\n    private settingsService: SettingsService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"add-batch init\");\r\n    this.settingsService.listAcademicYears().subscribe(data => {\r\n      if (data.success) {\r\n        this.academicYears = data.years;\r\n      }\r\n      else {\r\n        this.error = data.msg.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  onAddBatchSubmit() {\r\n    console.log(\"onAddBatchSubmit\");\r\n    let newBatch = {\r\n      name: this.name,\r\n      category: this.category,\r\n      course: this.course,\r\n      year: this.year,\r\n      stream: this.stream,\r\n      classSession: this.classSession,\r\n      enrolledFor: this.enrolledFor,\r\n      isDeleted: false,\r\n      entrance :\"\"\r\n    }\r\n\r\n    if(this.checkIfScienceStream()){\r\n      newBatch.entrance = this.entrance;\r\n    }\r\n\r\n    console.log(newBatch);\r\n    this.settingsService.addBatch(newBatch).subscribe(batchData =>{\r\n      if(batchData.success){\r\n        this.router.navigate(['settings']);\r\n      }\r\n      else this.error = batchData.msg.message;\r\n    })\r\n  }\r\n\r\n  checkIfCollegeSection() {\r\n    return this.category == \"College Section\";\r\n  }\r\n\r\n  checkIfScienceStream() {\r\n    return this.stream == \"Science\";\r\n  }\r\n\r\n  checkIfCommerceStream() {\r\n    return this.stream == \"Commerce\";\r\n  }\r\n\r\n  checkIfArtsStream() {\r\n    return this.stream == \"Arts\";\r\n  }\r\n\r\n  // unselects all radio inputs on change of category\r\n  unselectAll() {\r\n    this.stream = \"\";\r\n    this.enrolledFor = \"\";\r\n  }\r\n\r\n  showCourses(){\r\n    return (this.enrolledFor == \"X\" || this.enrolledFor == \"XII\");\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-batch/add-batch.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-faculty/add-faculty.component.css\n// module id = ../../../../../src/app/components/add-faculty/add-faculty.component.css\n// module chunks = main","module.exports = \"<p>\\r\\n  add-faculty works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-faculty/add-faculty.component.html\n// module id = ../../../../../src/app/components/add-faculty/add-faculty.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-faculty',\r\n  templateUrl: './add-faculty.component.html',\r\n  styleUrls: ['./add-faculty.component.css']\r\n})\r\nexport class AddFacultyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-faculty/add-faculty.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-payment/add-payment.component.css\n// module id = ../../../../../src/app/components/add-payment/add-payment.component.css\n// module chunks = main","module.exports = \"<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li class=\\\"breadcrumb-item\\\">\\r\\n        <a [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\r\\n      </li>\\r\\n      <li class=\\\"breadcrumb-item\\\">\\r\\n        <a [routerLink]=\\\"['/studentprofile/'+ studentId ]\\\">Student Profile</a>\\r\\n      </li>\\r\\n      <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Add Payment</li>\\r\\n    </ol>\\r\\n  </nav>\\r\\n  \\r\\n  <h3>\\r\\n    <strong> {{this.studentName}} </strong>\\r\\n  </h3>\\r\\n  \\r\\n  <form ngNativeValidate *ngIf=\\\"paymentRecord\\\" id=\\\"needs-validation\\\" class=\\\"bd-callout  bd-callout-yellow\\\" (submit)=\\\"onAddPaymentSubmit()\\\">\\r\\n    <fieldset>\\r\\n      <legend>Add Payment</legend>\\r\\n      <hr/>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Amount</label>\\r\\n          <input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\" id=\\\"inputSmall\\\" name=\\\"amount\\\" [(ngModel)]=\\\"amount\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Date of Payment</label>\\r\\n          <input class=\\\"form-control form-control-sm\\\" type=\\\"date\\\" id=\\\"inputSmall\\\" name=\\\"paymentDate\\\" [(ngModel)]=\\\"paymentDate\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Receipt Number</label>\\r\\n          <input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\" id=\\\"inputSmall\\\" name=\\\"receiptNumber\\\" [(ngModel)]=\\\"receiptNumber\\\" required>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-3 col-lg-2\\\">\\r\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Mode of Payment</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-12 col-md-9 col-lg-10\\\">\\r\\n          <div class=\\\"form-check\\\">\\r\\n            <label class=\\\"form-check-label\\\">\\r\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"modeRdo\\\" [(ngModel)]=\\\"modeOfPayment\\\" id=\\\"cashRdo\\\" value=\\\"Cash\\\" checked=\\\"\\\"> Cash\\r\\n            </label>\\r\\n            <label class=\\\"form-check-label\\\">\\r\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"modeRdo\\\" [(ngModel)]=\\\"modeOfPayment\\\" id=\\\"chequeRdo\\\" value=\\\"Cheque\\\"> Cheque\\r\\n            </label>\\r\\n            <label class=\\\"form-check-label\\\">\\r\\n              <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"modeRdo\\\" [(ngModel)]=\\\"modeOfPayment\\\" id=\\\"cardRdo\\\" value=\\\"Debit/Credit Card\\\"> Debit/Credit Card\\r\\n            </label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"isChequePayment()\\\">\\r\\n        <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Name of the Bank</label>\\r\\n          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"bankName\\\" [(ngModel)]=\\\"bankName\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-6 col-md-6 col-lg-2\\\">\\r\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Branch</label>\\r\\n          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputSmall\\\" name=\\\"bankBranch\\\" [(ngModel)]=\\\"bankBranch\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-6 col-md-6 col-lg-2\\\">\\r\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Cheque Number</label>\\r\\n          <input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputSmall\\\" name=\\\"chequeNumber\\\" [(ngModel)]=\\\"chequeNumber\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Cheque Date</label>\\r\\n          <input type=\\\"date\\\" class=\\\"form-control form-control-sm\\\" id=\\\"inputSmall\\\" name=\\\"chequeDate\\\" [(ngModel)]=\\\"chequeDate\\\" required>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"form-group col-sm-12 col-md-12 col-lg-12\\\">\\r\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"textarea1\\\">Remark</label>\\r\\n          <textarea class=\\\"form-control\\\" id=\\\"textarea1\\\" name=\\\"remark\\\" [(ngModel)]=\\\"remark\\\" rows=\\\"2\\\"></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n      <hr>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Make Payment</button>\\r\\n    </fieldset>\\r\\n  </form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-payment/add-payment.component.html\n// module id = ../../../../../src/app/components/add-payment/add-payment.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { PaymentService } from '../../services/payment.service';\r\nimport { FeesdetailsService } from '../../services/feesdetails.service';\r\n\r\n@Component({\r\n  selector: 'app-add-payment',\r\n  templateUrl: './add-payment.component.html',\r\n  styleUrls: ['./add-payment.component.css']\r\n})\r\nexport class AddPaymentComponent implements OnInit {\r\n\r\n  paymentId;\r\n  fees;\r\n  studentId;\r\n  paymentRecord;\r\n  studentName?: string;\r\n  amount?: number;\r\n  paymentDate?: Date;\r\n  receiptNumber?: string;\r\n  modeOfPayment?: string;\r\n  bankName?: string = \"\";\r\n  bankBranch?: string = \"\";\r\n  chequeNumber?: string = \"\";\r\n  chequeDate?: Date;\r\n  remark?: string = \"\";\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private paymentService: PaymentService,\r\n    private feesdetailsService: FeesdetailsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.paymentId = this.route.snapshot.params['id'];\r\n\r\n    this.paymentService.getPaymentRecordById(this.paymentId).subscribe(paymentData => {\r\n      this.paymentRecord = paymentData.payment;\r\n      this.studentId = paymentData.payment.studentId;\r\n\r\n      this.amount = this.paymentRecord.amount;\r\n      this.paymentDate = this.paymentRecord.paymentDate;\r\n      this.modeOfPayment = this.paymentRecord.modeOfPayment;\r\n      this.bankName = this.paymentRecord.bankName;\r\n      this.bankBranch = this.paymentRecord.bankBranch;\r\n      this.chequeDate = this.paymentRecord.chequeDate;\r\n      this.remark = this.paymentRecord.remark;\r\n      this.studentName = this.paymentRecord.studentName;\r\n\r\n      console.log(this.paymentRecord);\r\n      this.feesdetailsService.getFeesDetailsById(this.paymentRecord.feesDetailsId).subscribe(feesData => {\r\n        this.fees = feesData.feesDetails;\r\n        console.log(this.fees);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  isChequePayment() {\r\n    return (this.modeOfPayment == \"Cheque\")\r\n  }\r\n\r\n  onAddPaymentSubmit() {\r\n    console.log(\"onAddPaymentSubmit\");\r\n    // if (!this.fees.totalPaidFees)        // remove this later\r\n    // {\r\n    //   this.fees.totalPaidFees = 0;\r\n    //   this.fees.totalInstallmentAmount = 0;\r\n    // }\r\n\r\n    this.fees.totalPaidFees = Number(this.fees.totalPaidFees) + Number(this.amount);\r\n    this.fees.isPaid = (this.fees.totalPaidFees == this.fees.totalFeesToPay) ? true : false;\r\n\r\n    if (Number(this.fees.totalInstallmentAmount) == 0)\r\n      this.fees.totalInstallmentAmount = Number(this.fees.totalInstallmentAmount) + Number(this.amount);\r\n\r\n    this.feesdetailsService.updateFeesDetails(this.fees).subscribe(feesData => {\r\n      if (feesData.success) {\r\n        this.paymentRecord.isPaid = true;\r\n        this.paymentRecord.amount = this.amount;\r\n        this.paymentRecord.paymentDate = this.paymentDate;\r\n        this.paymentRecord.receiptNumber = this.receiptNumber;\r\n        this.paymentRecord.modeOfPayment = this.modeOfPayment;\r\n        this.paymentRecord.remark = this.remark;\r\n\r\n        if (this.isChequePayment()) {\r\n          this.paymentRecord.bankName = this.bankName;\r\n          this.paymentRecord.bankBranch = this.bankBranch;\r\n          this.paymentRecord.chequeDate = this.chequeDate;\r\n          this.paymentRecord.chequeNumber = this.chequeNumber;\r\n          this.paymentRecord.isChequeCleared = (this.paymentRecord.chequeDate == Date.now()) ? true : false\r\n          console.log(\"isChequeCleared: \" + this.paymentRecord.isChequeCleared);\r\n        }\r\n\r\n        this.paymentService.updatePaymentDetails(this.paymentRecord).subscribe(paymentData => {\r\n          if (paymentData.success)\r\n            this.router.navigate(['studentprofile', this.studentId]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-payment/add-payment.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-student/add-student.component.css\n// module id = ../../../../../src/app/components/add-student/add-student.component.css\n// module chunks = main","module.exports = \"<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\r\\n  <ol class=\\\"breadcrumb\\\">\\r\\n    <li class=\\\"breadcrumb-item\\\">\\r\\n      <a [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\r\\n    </li>\\r\\n    <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Add Student</li>\\r\\n  </ol>\\r\\n</nav>\\r\\n\\r\\n<form ngNativeValidate class=\\\"bd-callout  bd-callout-yellow\\\" id=\\\"needs-validation\\\">\\r\\n  <fieldset>\\r\\n    <legend>Add Student</legend>\\r\\n    <hr/>\\r\\n\\r\\n    <!-- Name -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Name</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required disabled>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Select Year</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <select id=\\\"academicyear\\\" class=\\\"custom-select\\\" name=\\\"year\\\" [(ngModel)]=\\\"year\\\">\\r\\n          <option *ngFor=\\\"let year of academicYears\\\" value=\\\"{{year.year}}\\\">{{year.year}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Category -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Category</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" (click)=\\\"unselectAll()\\\" name=\\\"category\\\" [(ngModel)]=\\\"category\\\" id=\\\"categoryRdo\\\"\\r\\n              value=\\\"School Section\\\" checked> School Section\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" (click)=\\\"unselectAll()\\\" name=\\\"category\\\" [(ngModel)]=\\\"category\\\" id=\\\"categoryRdo\\\"\\r\\n              value=\\\"College Section\\\"> College Section\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Stream If college section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"category == 'School Section'\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Medium</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"engRdo\\\" value=\\\"English\\\"> English\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"semiRdo\\\" value=\\\"Semi-English\\\"> Semi-English\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"marRdo\\\" value=\\\"Marathi\\\"> Marathi\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Stream If college section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"checkIfCollegeSection()\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Stream</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"sciRdo\\\" value=\\\"Science\\\"> Science\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"comRdo\\\" value=\\\"Commerce\\\"> Commerce\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"artsRdo\\\" value=\\\"Arts\\\"> Arts\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Enrolled for : options specific to school section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"category == 'School Section'\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Enrolled For</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"viiiRdo\\\" value=\\\"VIII\\\"> VIII\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"ixRdo\\\" value=\\\"IX\\\"> IX\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"ixAndxRdo\\\" value=\\\"IX + X\\\"> IX + X\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xRdo\\\" value=\\\"X\\\"> X\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Enrolled for : options specific to College section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"category == 'College Section'\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Enrolled For</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xiRdo\\\" value=\\\"XI\\\"> XI\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xiiRdo\\\" value=\\\"XII\\\"> XII\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xiAndxiiRdo\\\" value=\\\"XI + XII\\\"> XI + XII\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Enrolled for : options specific to Science stream -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"stream == 'Science'\\\">\\r\\n      <div class=\\\"col-2\\\"></div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"noneRdo\\\" value=\\\"None\\\"> None\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"medicalEntRdo\\\" value=\\\"NEET\\\"> NEET\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"enggEntRdo\\\" value=\\\"MH-CET\\\"> MH-CET\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"bothEntRdo\\\" value=\\\"NEET + MH-CET\\\"> NEET + MH-CET\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- Subjects specific to Science stream -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"stream == 'Science'\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Subjects Offered</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"pcbRdo\\\" value=\\\"PCB\\\"> PCB\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"pcmRdo\\\" value=\\\"PCM\\\"> PCM\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"pcmbRdo\\\" value=\\\"PCMB\\\"> PCMB\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Subjects specific to Commerce stream -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"stream == 'Commerce'\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Subjects Offered</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"spRdo\\\" value=\\\"All subjects with SP\\\"> All subjects with SP\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"mathsRdo\\\" value=\\\"All subjects with Maths\\\"> All subjects with Maths\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Subjects specific to Arts stream -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"stream == 'Arts'\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Subjects Offered</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"foursubRdo\\\" value=\\\"4 Subjects\\\"> 4 Subjects\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"allsubRdo\\\" value=\\\"All Subjects\\\"> All Subjects\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Courses -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showCourses()\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Course</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"courseRadios\\\" [(ngModel)]=\\\"course\\\" id=\\\"vacationRdo\\\" value=\\\"Vacation\\\"> Vacation\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"courseRadios\\\" [(ngModel)]=\\\"course\\\" id=\\\"regularRdo\\\" value=\\\"Regular\\\"> Regular\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Class Session -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Class Session</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" [(ngModel)]=\\\"classSession\\\" id=\\\"morningRdo\\\" value=\\\"Morning\\\"> Morning\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" [(ngModel)]=\\\"classSession\\\" id=\\\"evenRdo\\\" value=\\\"Evening\\\"> Evening\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Address -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-12\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Address</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"address\\\" [(ngModel)]=\\\"address\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Institution Information -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-9\\\" *ngIf=\\\"checkIfCollegeSection()\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Name of the College</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"instituteName\\\" [(ngModel)]=\\\"instituteName\\\"\\r\\n          required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-9\\\" *ngIf=\\\"!checkIfCollegeSection()\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Name of the School</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"instituteName\\\" [(ngModel)]=\\\"instituteName\\\"\\r\\n          required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Timing</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"instituteTiming\\\" [(ngModel)]=\\\"instituteTiming\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Contact Details -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Contact Number 1(Self)</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"contactNumber1\\\" [(ngModel)]=\\\"contactNumber1\\\"\\r\\n          required disabled>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Contact Number 2</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"contactNumber2\\\" [(ngModel)]=\\\"contactNumber2\\\"\\r\\n          required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Contact Number 3</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"contactNumber3\\\" [(ngModel)]=\\\"contactNumber3\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <hr/>\\r\\n\\r\\n    <!-- Fees Details -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Total Fees</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\" id=\\\"inputSmall\\\" name=\\\"totalFees\\\" [(ngModel)]=\\\"totalFees\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Concession</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\" id=\\\"inputSmall\\\" name=\\\"concession\\\" [(ngModel)]=\\\"concession\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Expected Date of Completion</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"date\\\" id=\\\"inputSmall\\\" name=\\\"expectedDateOfCompletion\\\" [(ngModel)]=\\\"expectedDateOfCompletion\\\"\\r\\n          required>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br />\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onAddStudentSubmit()\\\">Submit</button>\\r\\n  </fieldset>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-student/add-student.component.html\n// module id = ../../../../../src/app/components/add-student/add-student.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { StudentService } from '../../services/student.service';\r\nimport { SettingsService } from '../../services/settings.service';\r\n\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { PaymentService } from '../../services/payment.service';\r\nimport { FeesdetailsService } from '../../services/feesdetails.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-student',\r\n  templateUrl: './add-student.component.html',\r\n  styleUrls: ['./add-student.component.css']\r\n})\r\nexport class AddStudentComponent implements OnInit {\r\n\r\n  academicYears;\r\n  studentId: string;\r\n  feesDetailsId: string;\r\n  userId?: string;\r\n  name?: string;\r\n  address?: string;\r\n  category?: string;\r\n  stream?: string;\r\n  enrolledFor?: string;\r\n  entrance?: string;\r\n  course?: string = \"Regular\";\r\n  offeredSubjects?: string;\r\n  classSession?: string;\r\n  instituteName?: string;\r\n  instituteTiming?: string;\r\n  contactNumber1?: string;\r\n  contactNumber2?: string;\r\n  contactNumber3?: string;\r\n  currentStandard?: string;\r\n  isCombinedAdmission?: boolean;\r\n  isDeleted?: boolean;\r\n  totalFees?: number;\r\n  concession?: number;\r\n  expectedDateOfCompletion?: Date;\r\n  error: string = \"\";\r\n  year: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private usersService: UsersService,\r\n    private authService: AuthService,\r\n    private studentsService: StudentService,\r\n    private paymentService: PaymentService,\r\n    private feesdetailsService: FeesdetailsService,\r\n    private settingsService: SettingsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // get user id\r\n    this.userId = this.route.snapshot.params['id'];\r\n    console.log(this.userId);\r\n\r\n    //get student name\r\n    this.authService.getUserProfileById(this.userId).subscribe(data => {\r\n      this.name = data.user.name;\r\n      this.contactNumber1 = data.user.phoneNumber;\r\n      console.log(\"getUserProfileById: \" + this.name);\r\n    });\r\n\r\n    this.settingsService.listAcademicYears().subscribe(data => {\r\n      if (data.success) {\r\n        this.academicYears = data.years;\r\n      }\r\n      else {\r\n        this.error = data.msg.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Add New Student\r\n  onAddStudentSubmit() {\r\n\r\n    console.log(\"onAddStudentSubmit\");\r\n\r\n    let newlyAddedStudent = {\r\n      userId: this.userId,\r\n      name: this.name,\r\n      category: this.category,\r\n      stream: this.stream,\r\n      address: this.address,\r\n      classSession: this.classSession,\r\n      enrolledFor: this.enrolledFor,\r\n      course: this.course,\r\n      offeredSubjects: this.offeredSubjects,\r\n      instituteInfo: {\r\n        name: this.instituteName,\r\n        timing: this.instituteTiming\r\n      },\r\n      contactDetails: this.addContactDetails(),\r\n      currentYear: this.year,\r\n      isDeleted: false\r\n    }\r\n\r\n    this.setCurrentStandard(newlyAddedStudent);\r\n\r\n    // add science related fields\r\n    if (this.checkIfScienceStream())\r\n      this.addScienceRelatedFields(newlyAddedStudent);\r\n\r\n    /*  Add student record to students collection\r\n        Add payment record to payments collection\r\n        Redirect to Add Payment screen\r\n     */\r\n\r\n    this.studentsService.addNewStudent(newlyAddedStudent).subscribe(studentData => {\r\n      if (studentData.success) {\r\n        this.studentId = studentData.student._id;\r\n\r\n        this.feesdetailsService.addNewFeesdetails(this.createFeesDetailsObj()).subscribe(feesData => {\r\n          if (feesData.success) {\r\n            this.feesDetailsId = feesData.feesDetails._id;\r\n            this.paymentService.addNewPayment(this.createPaymentDetailsObj()).subscribe(paymentData => {\r\n              if (paymentData.success) {\r\n                let paymentDetailId = paymentData.payment._id;\r\n                this.router.navigate(['addPayment', paymentDetailId]);\r\n              } else {\r\n                this.error = paymentData.msg._message;\r\n              }\r\n            });\r\n          } else {\r\n            this.error = feesData.msg._message;\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        this.error = studentData.msg._message;\r\n      }\r\n    });\r\n  }\r\n\r\n  /******************* \r\n  / Helper functions\r\n  *******************/\r\n\r\n  createFeesDetailsObj() {\r\n    return {\r\n      studentId: this.studentId,\r\n      feesDetailsId: this.feesDetailsId,\r\n      totalFees: this.totalFees,\r\n      concession: this.concession,\r\n      totalFeesToPay: Number(this.totalFees) - Number(this.concession),\r\n      totalPaidFees: 0,\r\n      totalInstallmentAmount: 0,\r\n      expectedDateOfCompletion: this.expectedDateOfCompletion,\r\n      isDeleted: false\r\n    }\r\n  }\r\n\r\n  createPaymentDetailsObj() {\r\n    return {\r\n      studentId: this.studentId,\r\n      feesDetailsId: this.feesDetailsId,\r\n      studentName: this.name,   /* studentName */\r\n      stream: this.stream,\r\n      enrolledFor: this.enrolledFor,\r\n      receiptNumber: 0,\r\n      isPaid: false,\r\n      paymentDate: \"\",\r\n      amount: 0,\r\n      modeOfPayment: \"\",\r\n      bankName: \"\",\r\n      chequeDate: new Date(),\r\n      chequeNumber: \"\",\r\n      remark: \"\",\r\n      createdAt: new Date(),\r\n      isDeleted: false\r\n    }\r\n  }\r\n\r\n\r\n  addContactDetails() {\r\n    let contactDetails = [];\r\n\r\n    if (this.contactNumber1)\r\n      contactDetails.push(this.contactNumber1);\r\n    if (this.contactNumber2)\r\n      contactDetails.push(this.contactNumber2);\r\n    if (this.contactNumber3)\r\n      contactDetails.push(this.contactNumber3);\r\n\r\n    return contactDetails;\r\n  }\r\n\r\n  checkIfCollegeSection() {\r\n    return this.category == \"College Section\";\r\n  }\r\n\r\n  checkIfScienceStream() {\r\n    return this.stream == \"Science\";\r\n  }\r\n\r\n  checkIfCommerceStream() {\r\n    return this.stream == \"Commerce\";\r\n  }\r\n\r\n  checkIfArtsStream() {\r\n    return this.stream == \"Arts\";\r\n  }\r\n\r\n  // for sciecne stream specific fields\r\n  addScienceRelatedFields(newlyAddedStudent) {\r\n    newlyAddedStudent.entrance = this.entrance;\r\n    newlyAddedStudent.hasEnrolledForEntrance = (this.entrance != \"None\");\r\n  }\r\n\r\n  // sets current standard\r\n  // checks if admission is combined\r\n  setCurrentStandard(newlyAddedStudent) {\r\n    if (this.checkIfCollegeSection()) {\r\n      newlyAddedStudent.isCombinedAdmission = (this.enrolledFor == \"XI + XII\");\r\n    }\r\n    else\r\n      newlyAddedStudent.isCombinedAdmission = (this.enrolledFor == \"IX + X\");\r\n\r\n    if (!newlyAddedStudent.isCombinedAdmission) {\r\n      // if not combined admission, set currentStandard same as enrolledFor\r\n      newlyAddedStudent.currentStandard = this.enrolledFor;\r\n    }\r\n    else if (this.checkIfScienceStream() || this.checkIfCommerceStream() || this.checkIfArtsStream()) {\r\n      newlyAddedStudent.currentStandard = this.enrolledFor == \"XI + XII\" ? \"XI\" : this.enrolledFor;\r\n    }\r\n    else\r\n      newlyAddedStudent.currentStandard = this.enrolledFor == \"IX + X\" ? \"IX\" : this.enrolledFor;\r\n  }\r\n\r\n  // unselects all radio inputs on change of category\r\n  unselectAll() {\r\n    console.log(\"getting here\");\r\n    this.stream = \"\";\r\n    this.enrolledFor = \"\";\r\n    this.entrance = \"\";\r\n    this.offeredSubjects = \"\";\r\n  }\r\n\r\n  showCourses() {\r\n    return (this.enrolledFor == \"X\" || this.enrolledFor == \"XII\");\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/add-student/add-student.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<app-search-student></app-search-student>\\r\\n\\r\\n<ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\r\\n  <li class=\\\"nav-item\\\">\\r\\n    <a class=\\\"nav-link active\\\" id=\\\"pendingChq-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#pendingChq\\\" role=\\\"tab\\\" aria-controls=\\\"pendingChq\\\"\\r\\n      aria-selected=\\\"false\\\">\\r\\n      PDC\\r\\n      <span class=\\\"badge badge-pill badge-info\\\" *ngIf=\\\"pendingChequeNotifications\\\">{{pendingChequeNotifications}}</span>\\r\\n    </a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\">\\r\\n    <a class=\\\"nav-link\\\" id=\\\"home-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#home\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\" aria-selected=\\\"true\\\">\\r\\n      Science\\r\\n      <span class=\\\"badge badge-pill badge-info\\\" *ngIf=\\\"sciecneNotifications\\\">{{sciecneNotifications}}</span>\\r\\n    </a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\">\\r\\n    <a class=\\\"nav-link\\\" id=\\\"arts-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#arts\\\" role=\\\"tab\\\" aria-controls=\\\"home\\\" aria-selected=\\\"true\\\">\\r\\n      Arts\\r\\n      <span class=\\\"badge badge-pill badge-info\\\" *ngIf=\\\"artsNotifications\\\">{{artsNotifications}}</span>\\r\\n    </a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\">\\r\\n    <a class=\\\"nav-link\\\" id=\\\"krishna-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#krishna\\\" role=\\\"tab\\\" aria-controls=\\\"profile\\\" aria-selected=\\\"false\\\">\\r\\n      Krishna\\r\\n      <span class=\\\"badge badge-pill badge-info\\\" *ngIf=\\\"krishnaNotifications\\\">{{krishnaNotifications}}</span>\\r\\n    </a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\">\\r\\n    <a class=\\\"nav-link\\\" id=\\\"coaching-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#coaching\\\" role=\\\"tab\\\" aria-controls=\\\"coaching\\\" aria-selected=\\\"false\\\">\\r\\n      Coaching\\r\\n      <span class=\\\"badge badge-pill badge-info\\\" *ngIf=\\\"coachingNotifications\\\">{{coachingNotifications}}</span>\\r\\n    </a>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\"\\r\\n  *ngIf=\\\"itemToEdit\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Cheque Clearance for {{ itemToEdit.studentName }}</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form>\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <label for=\\\"recipient-name\\\" class=\\\"col-form-label\\\">Date:</label>\\r\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" name=\\\"chequeClearanceDate\\\" [(ngModel)]=\\\"chequeClearanceDate\\\" id=\\\"chequeClearanceDate\\\"\\r\\n                required>\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <label for=\\\"message-text\\\" class=\\\"col-form-label\\\">Remark:</label>\\r\\n              <textarea class=\\\"form-control\\\" name=\\\"remark\\\" [(ngModel)]=\\\"remark\\\" id=\\\"remark\\\"></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"markChequeAsCleared()\\\">Save</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"tab-content\\\" id=\\\"myTabContent\\\">\\r\\n  <div class=\\\"tab-pane fade show active\\\" id=\\\"pendingChq\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"pendingChq-tab\\\">\\r\\n    <table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"pendingChequeEntries\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Student Name</th>\\r\\n          <th scope=\\\"col\\\">Amount</th>\\r\\n          <th scope=\\\"col\\\">Receipt Dated</th>\\r\\n          <th scope=\\\"col\\\">Cheque Dated</th>\\r\\n          <th scope=\\\"col\\\">Options</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let entry of pendingChequeEntries | sortgrid : 'chequeDate'\\\" class=\\\"table-bordered\\\">\\r\\n          <td>{{entry.studentName}}\\r\\n            <br/> [ {{entry.enrolledFor}} / {{entry.stream}} ]\\r\\n          </td>\\r\\n          <td>Rs. {{entry.amount}}</td>\\r\\n          <td>{{entry.paymentDate | date:'dd-MM-yyyy'}}</td>\\r\\n          <td>{{entry.chequeDate | date:'dd-MM-yyyy'}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn-sm btn-info\\\" [routerLink]=\\\"['/studentprofile/'+ entry.studentId]\\\">Profile</button>\\r\\n            <button class=\\\"btn-sm btn-primary\\\" (click)=\\\"changeEditState(entry)\\\">Mark as Cleard</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"tab-pane fade\\\" id=\\\"home\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"home-tab\\\">\\r\\n    <br/>\\r\\n    <table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"sciecneStudents\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Name</th>\\r\\n          <th scope=\\\"col\\\">Amount Due</th>\\r\\n          <th scope=\\\"col\\\">Due date</th>\\r\\n          <th scope=\\\"col\\\"></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let student of sciecneStudents | sortgrid : 'paymentDate'\\\" class=\\\"table-bordered\\\">\\r\\n          <td>{{student.studentName}}</td>\\r\\n          <td>Rs. {{student.amount}}</td>\\r\\n          <td>{{student.paymentDate | date:'dd-MM-yyyy'}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn-sm btn-info\\\" class=\\\"btn-sm btn-info\\\" [routerLink]=\\\"['/studentprofile/'+ student.studentId]\\\">Profile</button>\\r\\n            <button class=\\\"btn-sm btn-primary\\\" [routerLink]=\\\"['/addPayment/'+ student._id]\\\">Make Payment</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"tab-pane fade\\\" id=\\\"arts\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"arts-tab\\\">\\r\\n    <br/>\\r\\n    <table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"artsStudents\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Name</th>\\r\\n          <th scope=\\\"col\\\">Amount Due</th>\\r\\n          <th scope=\\\"col\\\">Due date</th>\\r\\n          <th scope=\\\"col\\\"></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let student of artsStudents | sortgrid : 'paymentDate'\\\" class=\\\"table-bordered\\\">\\r\\n          <td>{{student.studentName}}</td>\\r\\n          <td>Rs. {{student.amount}}</td>\\r\\n          <td>{{student.paymentDate | date:'dd-MM-yyyy'}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn-sm btn-primary\\\" [routerLink]=\\\"['/studentprofile/'+ student.studentId]\\\">Profile</button>\\r\\n            <button class=\\\"btn-sm btn-primary\\\" [routerLink]=\\\"['/addPayment/'+ student._id]\\\">Make Payment</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"tab-pane fade\\\" id=\\\"krishna\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"krishna-tab\\\">\\r\\n    <br/>\\r\\n    <table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"krishnaStudents\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Name</th>\\r\\n          <th scope=\\\"col\\\">Amount Due</th>\\r\\n          <th scope=\\\"col\\\">Due date</th>\\r\\n          <th scope=\\\"col\\\"></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let student of krishnaStudents | sortgrid : 'paymentDate'\\\" class=\\\"table-bordered\\\">\\r\\n          <td>{{student.studentName}}</td>\\r\\n          <td>Rs. {{student.amount}}</td>\\r\\n          <td>{{student.paymentDate | date:'dd-MM-yyyy'}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn-sm btn-info\\\" [routerLink]=\\\"['/studentprofile/'+ student.studentId]\\\">Profile</button>\\r\\n            <button class=\\\"btn-sm btn-primary\\\" [routerLink]=\\\"['/addPayment/'+ student._id]\\\">Make Payment</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"tab-pane fade\\\" id=\\\"coaching\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"coaching-tab\\\">\\r\\n    <br/>\\r\\n    <table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"coachingStudents\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Name</th>\\r\\n          <th scope=\\\"col\\\">Amount Due</th>\\r\\n          <th scope=\\\"col\\\">Due date</th>\\r\\n          <th scope=\\\"col\\\"></th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let student of coachingStudents | sortgrid : 'paymentDate'\\\" class=\\\"table-bordered\\\">\\r\\n          <td>{{student.studentName}}</td>\\r\\n          <td>Rs. {{student.amount}}</td>\\r\\n          <td>{{student.paymentDate | date:'dd-MM-yyyy'}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn-sm btn-primary\\\" [routerLink]=\\\"['/studentprofile/'+ student.studentId]\\\">Profile</button>\\r\\n            <button class=\\\"btn-sm btn-primary\\\" [routerLink]=\\\"['/addPayment/'+ student._id]\\\">Make Payment</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { PaymentService } from '../../services/payment.service';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  error;\r\n  academicYears;\r\n  students: any;\r\n  sciecneStudents: any[];\r\n  artsStudents: any[];\r\n  krishnaStudents: any[];\r\n  coachingStudents: any[];\r\n  pendingChequeEntries: any[];\r\n  sciecneNotifications: number = 0;\r\n  krishnaNotifications: number = 0;\r\n  artsNotifications: number = 0;\r\n  coachingNotifications: number = 0;\r\n  pendingChequeNotifications: number = 0;\r\n\r\n  itemToEdit: any;\r\n  chequeClearanceDate: any;\r\n  remark;\r\n  editState: boolean = false;\r\n\r\n  constructor(\r\n    private paymentService: PaymentService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"ngInit\");\r\n    this.showDashboard();\r\n  }\r\n\r\n  showDashboard() {\r\n\r\n    // Display balance fees\r\n    this.paymentService.showBalanceFeesOnDashboard().subscribe(balanceFeesData => {\r\n      this.students = balanceFeesData.balanceFees;\r\n\r\n      //load sciecne student by default\r\n      this.sciecneStudents = this.students.filter(function (el) {\r\n        return el.stream == \"Science\";\r\n      });\r\n      this.sciecneNotifications = this.sciecneStudents.length;\r\n\r\n      //load arts student\r\n      this.artsStudents = this.students.filter(function (el) {\r\n        return el.stream == \"Arts\";\r\n      });\r\n      this.artsNotifications = this.artsStudents.length;\r\n\r\n      //load English medium student by default\r\n      this.krishnaStudents = this.students.filter(function (el) {\r\n        return el.stream == \"English\";\r\n      });\r\n      this.krishnaNotifications = this.krishnaStudents.length;\r\n\r\n      //load English medium student by default\r\n      this.coachingStudents = this.students.filter(function (el) {\r\n        return el.stream == \"Semi-English\" || el.stream == \"Marathi\";\r\n      });\r\n      this.coachingNotifications = this.coachingStudents.length;\r\n    });\r\n\r\n    this.getPendingCheques();\r\n  }\r\n\r\n  getPendingCheques() {\r\n    // Display pending cheque entries\r\n    this.paymentService.showPendingChequeEntries().subscribe(entries => {\r\n      this.pendingChequeEntries = entries.pendingCheques;\r\n      this.pendingChequeNotifications = this.pendingChequeEntries.length;\r\n    });\r\n  }\r\n\r\n  markChequeAsCleared() {\r\n    this.itemToEdit.isChequeCleared = true;\r\n    this.itemToEdit.chequeClearanceDate = this.chequeClearanceDate;\r\n    this.itemToEdit.remark = this.remark;\r\n    console.log(this.itemToEdit);\r\n\r\n    this.paymentService.updatePaymentDetails(this.itemToEdit).subscribe(data => {\r\n      if (data.success) {\r\n        $(\"#exampleModal\").modal('hide');\r\n        this.editState = false;\r\n        this.getPendingCheques();\r\n      }\r\n    });\r\n  }\r\n\r\n  changeEditState(item) {\r\n    this.editState = true;\r\n    this.itemToEdit = item;\r\n    console.log(\"item: \" + item);\r\n    $(\"#exampleModal\").modal('show');\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/edit-batch/edit-batch.component.css\n// module id = ../../../../../src/app/components/edit-batch/edit-batch.component.css\n// module chunks = main","module.exports = \"<div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\r\\n  {{error}}\\r\\n</div>\\r\\n\\r\\n<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\r\\n  <ol class=\\\"breadcrumb\\\">\\r\\n    <li class=\\\"breadcrumb-item\\\">\\r\\n      <a [routerLink]=\\\"['/settings']\\\">Settings</a>\\r\\n    </li>\\r\\n    <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Edit Batch</li>\\r\\n  </ol>\\r\\n</nav>\\r\\n\\r\\n<form ngNativeValidate class=\\\"bd-callout  bd-callout-yellow\\\" id=\\\"needs-validation\\\">\\r\\n  <fieldset>\\r\\n    <legend>Edit Batch</legend>\\r\\n    <hr/>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Category</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"category\\\" [(ngModel)]=\\\"category\\\" id=\\\"categoryRdo\\\" value=\\\"School Section\\\"\\r\\n              checked> School Section\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\" *ngIf=\\\"branch != 'Mankhurd'\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"category\\\" [(ngModel)]=\\\"category\\\" id=\\\"categoryRdo\\\" value=\\\"College Section\\\"> College Section\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Academic Year</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <select id=\\\"academicyear\\\" class=\\\"custom-select\\\" name=\\\"year\\\" [(ngModel)]=\\\"year\\\">\\r\\n          <option *ngFor=\\\"let year of academicYears\\\" value=\\\"{{year.year}}\\\">{{year.year}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Stream If college section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"category == 'School Section'\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Medium</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"engRdo\\\" value=\\\"English\\\"> English\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"semiRdo\\\" value=\\\"Semi-English\\\"> Semi-English\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"marRdo\\\" value=\\\"Marathi\\\"> Marathi\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Stream If college section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"checkIfCollegeSection()\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Stream</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"sciRdo\\\" value=\\\"Science\\\"> Science\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"comRdo\\\" value=\\\"Commerce\\\"> Commerce\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"artsRdo\\\" value=\\\"Arts\\\"> Arts\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Enrolled for : options specific to school section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"category == 'School Section'\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Enrolled For</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"viiiRdo\\\" value=\\\"VIII\\\"> VIII\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"ixRdo\\\" value=\\\"IX\\\"> IX\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"ixAndxRdo\\\" value=\\\"IX + X\\\"> IX + X\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xRdo\\\" value=\\\"X\\\"> X\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Enrolled for : options specific to College section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"category == 'College Section'\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Enrolled For</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xiRdo\\\" value=\\\"XI\\\"> XI\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xiiRdo\\\" value=\\\"XII\\\"> XII\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xiAndxiiRdo\\\" value=\\\"XI + XII\\\"> XI + XII\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"stream == 'Science'\\\">\\r\\n      <div class=\\\"col-2\\\"></div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"noneRdo\\\" value=\\\"None\\\"> None\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"medicalEntRdo\\\" value=\\\"NEET\\\"> NEET\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"enggEntRdo\\\" value=\\\"MH-CET\\\"> MH-CET\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"bothEntRdo\\\" value=\\\"NEET + MH-CET\\\"> NEET + MH-CET\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showCourses()\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Course</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"courseRadios\\\" [(ngModel)]=\\\"course\\\" id=\\\"vacationRdo\\\" value=\\\"Vacation\\\"> Vacation\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"courseRadios\\\" [(ngModel)]=\\\"course\\\" id=\\\"regularRdo\\\" value=\\\"Regular\\\"> Regular\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Class Session -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Class Session</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" [(ngModel)]=\\\"classSession\\\" id=\\\"morningRdo\\\" value=\\\"Morning\\\"> Morning\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" [(ngModel)]=\\\"classSession\\\" id=\\\"evenRdo\\\" value=\\\"Evening\\\"> Evening\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Name</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-9\\\">\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <br/>\\r\\n    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onEditBatchSubmit()\\\">Update</button>\\r\\n  </fieldset>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/edit-batch/edit-batch.component.html\n// module id = ../../../../../src/app/components/edit-batch/edit-batch.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { SettingsService } from \"../../services/settings.service\";\r\n\r\n@Component({\r\n  selector: 'app-edit-batch',\r\n  templateUrl: './edit-batch.component.html',\r\n  styleUrls: ['./edit-batch.component.css']\r\n})\r\nexport class EditBatchComponent implements OnInit {\r\n\r\n  id;\r\n  batchToEdit;\r\n  error;\r\n  stream;\r\n  enrolledFor;\r\n  category;\r\n  year;\r\n  name;\r\n  academicYears;\r\n  classSession;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private settingsService: SettingsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.route.snapshot.params['id'];\r\n    this.settingsService.listAcademicYears().subscribe(data => {\r\n      if (data.success) {\r\n        this.academicYears = data.years;\r\n      }\r\n      else {\r\n        this.error = data.msg.message;\r\n      }\r\n    });\r\n\r\n    this.batchToEdit = this.settingsService.getBatchById(this.id).subscribe(batchData => {\r\n      if (batchData.success) {\r\n        this.batchToEdit = batchData.batch;\r\n        console.log(this.batchToEdit);\r\n        this.category = this.batchToEdit.category;\r\n        this.stream = this.batchToEdit.stream;\r\n        this.year = this.batchToEdit.year;\r\n        this.name = this.batchToEdit.name;\r\n        this.enrolledFor = this.batchToEdit.enrolledFor;\r\n        this.classSession = this.batchToEdit.classSession;\r\n      }\r\n      else\r\n        this.error = batchData.msg.message;\r\n    });\r\n  }\r\n\r\n  onEditBatchSubmit() {\r\n    this.batchToEdit.category = this.category;\r\n    this.batchToEdit.stream = this.stream;\r\n    this.batchToEdit.year = this.year;\r\n    this.batchToEdit.name = this.name;\r\n    this.batchToEdit.enrolledFor = this.enrolledFor;\r\n    this.batchToEdit.classSession = this.classSession;\r\n    console.log(this.batchToEdit);\r\n\r\n    this.settingsService.editBatch(this.batchToEdit).subscribe(data => {\r\n      if (data.success) {\r\n        this.router.navigate(['settings']);\r\n      }\r\n      else this.error = data.msg.message;\r\n    });\r\n  }\r\n\r\n  checkIfCollegeSection() {\r\n    return this.category == \"College Section\";\r\n  }\r\n\r\n  checkIfScienceStream() {\r\n    return this.stream == \"Science\";\r\n  }\r\n\r\n  checkIfCommerceStream() {\r\n    return this.stream == \"Commerce\";\r\n  }\r\n\r\n  checkIfArtsStream() {\r\n    return this.stream == \"Arts\";\r\n  }\r\n\r\n  // unselects all radio inputs on change of category\r\n  unselectAll() {\r\n    this.stream = \"\";\r\n    this.enrolledFor = \"\";\r\n  }\r\n\r\n  showCourses() {\r\n    return (this.enrolledFor == \"X\" || this.enrolledFor == \"XII\");\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/edit-batch/edit-batch.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/home/home.component.css\n// module id = ../../../../../src/app/components/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n  <h1 class=\\\"display-3\\\">Hello, staff!</h1>\\r\\n  <p class=\\\"lead\\\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\\r\\n  <hr class=\\\"my-4\\\">\\r\\n  <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\\r\\n  <!-- *ngIf=\\\"!(afAuth.authState | async)\\\" -->\\r\\n\\r\\n  <div>\\r\\n    <button class=\\\"btn btn-info\\\" *ngIf = \\\"!authService.loggedIn()\\\" routerLink=\\\"/login\\\" id=\\\"email\\\">Login With Email</button>\\r\\n    <br/>\\r\\n    <br/>\\r\\n  </div>\\r\\n  <button class=\\\"btn btn-primary\\\" *ngIf = \\\"authService.loggedIn()\\\" routerLink=\\\"/dashboard\\\">Go to Dashboard</button>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/home/home.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/login/login.component.css\n// module id = ../../../../../src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\r\\n  {{error}}\\r\\n</div>\\r\\n\\r\\n<form class=\\\"form-signin\\\" ngNativeValidate>\\r\\n  <h2 class=\\\"form-signin-heading\\\">Login</h2>\\r\\n  <hr/>\\r\\n\\r\\n  <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">Email address</label>\\r\\n  <input type=\\\"email\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"Email address\\\" required\\r\\n    autofocus>\\r\\n\\r\\n  <br/>\\r\\n\\r\\n  <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\r\\n  <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"Password\\\"\\r\\n    required>\\r\\n  <br/>\\r\\n  <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"button\\\" (click)=\\\"onLoginSubmit()\\\">Sign in</button>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/login/login.component.html\n// module id = ../../../../../src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { SettingsService } from \"../../services/settings.service\";\r\nimport { ValidateService } from \"../../services/validate.service\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  email: string;\r\n  password: string;\r\n  error: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private settingsService: SettingsService,\r\n    private authService: AuthService,\r\n    private validateService: ValidateService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // Login\r\n  onLoginSubmit() {\r\n    console.log(\"onLoginSubmit\");\r\n\r\n    let user = {\r\n      email: this.email,\r\n      password: this.password\r\n    }\r\n\r\n    if (!this.validateService.validateEmail(this.email)) {\r\n      this.error = \"Invalid Email Address\";\r\n    }\r\n    else {\r\n      this.authService.authenticateUser(user).subscribe(data => {\r\n        if (data.success) {\r\n          if (data.user.isAdmin) {\r\n            this.error = \"Only  Admin users are allowed to login.\";\r\n          }\r\n          else {\r\n            //set current year\r\n            this.settingsService.getCurrentYear().subscribe(yearData => {\r\n              if (yearData.success) {\r\n\r\n                // set auth token and currentYear\r\n                this.authService.storeUserData(data.token, data.user, yearData.year.year);\r\n                this.router.navigate(['dashboard']);\r\n              }\r\n              else\r\n                this.router.navigate(['redirect']);\r\n            });\r\n\r\n          }\r\n        } else {\r\n          this.error = \"User record not found. Please check your login credentials\";\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/login/login.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Students Classes</a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-controls=\\\"navbarsExampleDefault\\\"\\r\\n      aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"navbar-collapse collapse\\\" id=\\\"navbar\\\">\\r\\n      <ul class=\\\"navbar-nav mr-auto navbar-left\\\">\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLink]=\\\"['/signup']\\\">Add New Student</a>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLink]=\\\"['/studentslisting']\\\">List Students</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <ul class=\\\"navbar-nav mr-auto navbar-right\\\">\\r\\n        <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"authService.loggedIn()\\\">\\r\\n          <a class=\\\"nav-link dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\">Settings</a>\\r\\n          <div class=\\\"dropdown-menu\\\" x-placement=\\\"bottom-start\\\" style=\\\"position: absolute; transform: translate3d(0px, 40px, 0px); top: 0px; left: 0px; will-change: transform;\\\">\\r\\n            <a class=\\\"dropdown-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLink]=\\\"['/addbatch']\\\">Add Batch</a>\\r\\n            <a class=\\\"dropdown-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLink]=\\\"['/addfaculty']\\\">Add Faculty</a>\\r\\n            <a class=\\\"dropdown-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLink]=\\\"['/addacademicyear']\\\">Add Academic Year</a>\\r\\n            <div class=\\\"dropdown-divider\\\"></div>\\r\\n            <a class=\\\"dropdown-item\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLink]=\\\"['/settings']\\\">Settings</a>\\r\\n          </div>\\r\\n        </li>\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"authService.loggedIn()\\\" [routerLink]=\\\"['/userprofile']\\\">Profile</a>\\r\\n        </li>\\r\\n        <!-- <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"!authService.loggedIn()\\\" [routerLink]=\\\"['/login']\\\">Login</a>\\r\\n        </li> -->\\r\\n        <li class=\\\"nav-item\\\">\\r\\n          <a class=\\\"nav-link\\\" *ngIf=\\\"authService.loggedIn()\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n<br/>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router:Router,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  logout(){\r\n    this.authService.logout();\r\n    this.router.navigate(['/']);\r\n    return false;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/payment-history/payment-history.component.css\n// module id = ../../../../../src/app/components/payment-history/payment-history.component.css\n// module chunks = main","module.exports = \"<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\r\\n  <ol class=\\\"breadcrumb\\\">\\r\\n    <li class=\\\"breadcrumb-item\\\">\\r\\n      <a [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\r\\n    </li>\\r\\n    <li class=\\\"breadcrumb-item\\\">\\r\\n      <a [routerLink]=\\\"['/studentprofile/'+ studentId ]\\\">Student Profile</a>\\r\\n    </li>\\r\\n    <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Payment Details</li>\\r\\n  </ol>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"paymentInfo\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header active\\\">\\r\\n        <h5>Payment Receipt</h5>\\r\\n      </div>\\r\\n      <div class=\\\"card-block\\\">\\r\\n        <ul class=\\\"list-group list-group-flush\\\">\\r\\n          <li class=\\\"list-group-item\\\">\\r\\n            <strong>Received with thanks from: </strong> {{ paymentInfo.studentName }}</li>\\r\\n          <li class=\\\"list-group-item\\\">\\r\\n            <strong>Date of Payment: </strong> {{ paymentInfo.paymentDate }}</li>\\r\\n          <li class=\\\"list-group-item\\\">\\r\\n            <strong>Sum of rupees: </strong> Rs.{{ paymentInfo.amount }}</li>\\r\\n          <li class=\\\"list-group-item\\\">\\r\\n            <strong>Receipt Number: </strong> {{ paymentInfo.receiptNumber }}</li>\\r\\n          <li class=\\\"list-group-item\\\">\\r\\n            <strong>By: </strong> {{ paymentInfo.modeOfPayment }}</li>\\r\\n          <li class=\\\"list-group-item\\\" *ngIf=\\\"paymentInfo.modeOfPayment == 'Cheque'\\\">\\r\\n            <strong>Bank: </strong> {{ paymentInfo.bankName }}\\r\\n            <br/>\\r\\n            <strong>Branch: </strong> {{ paymentInfo.branch }}\\r\\n            <br/>\\r\\n            <strong>Cheque Number: </strong> {{ paymentInfo.chequeNumber }}\\r\\n            <br/>\\r\\n            <strong>Cheque Dated: </strong> {{ paymentInfo.chequeDate | date:'dd-MM-yyyy' }}\\r\\n            <br/>\\r\\n            <strong *ngIf=\\\"paymentInfo.isChequeCleared\\\">Cheque Clearance Date: </strong> {{ paymentInfo.chequeClearanceDate }}\\r\\n          </li>\\r\\n          <li class=\\\"list-group-item\\\">\\r\\n            <strong>Remark:</strong> {{ paymentInfo.remark }}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/payment-history/payment-history.component.html\n// module id = ../../../../../src/app/components/payment-history/payment-history.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { PaymentService } from \"../../services/payment.service\";\r\n\r\n@Component({\r\n  selector: 'app-payment-history',\r\n  templateUrl: './payment-history.component.html',\r\n  styleUrls: ['./payment-history.component.css']\r\n})\r\nexport class PaymentHistoryComponent implements OnInit {\r\n\r\n  id;\r\n  studentId;\r\n  paymentInfo;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private paymentService: PaymentService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // get id\r\n    this.id = this.route.snapshot.params['id'];\r\n    \r\n    this.paymentService.getPaymentRecordById(this.id).subscribe(paymentData => {\r\n      this.paymentInfo = paymentData.payment;\r\n      this.studentId = this.paymentInfo.studentId;\r\n    });\r\n\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/payment-history/payment-history.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/redirect/redirect.component.css\n// module id = ../../../../../src/app/components/redirect/redirect.component.css\n// module chunks = main","module.exports = \"<div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"message\\\">\\r\\n  {{message}}\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/redirect/redirect.component.html\n// module id = ../../../../../src/app/components/redirect/redirect.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-redirect',\r\n  templateUrl: './redirect.component.html',\r\n  styleUrls: ['./redirect.component.css']\r\n})\r\nexport class RedirectComponent implements OnInit {\r\n\r\n  message:string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.message = this.route.snapshot.params['message'];\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/redirect/redirect.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/search-student/search-student.component.css\n// module id = ../../../../../src/app/components/search-student/search-student.component.css\n// module chunks = main","module.exports = \"<form>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"form-group col-sm-12 col-md-10 col-lg-10\\\">\\r\\n      <input class=\\\"form-control form-control-sm\\\" placeholder=\\\"Search by Name\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\"\\r\\n        required>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-sm-12 col-md-2 col-lg-2\\\">\\r\\n      <button class=\\\"btn-sm btn-secondary my-2 my-sm-0\\\" (click)=\\\"searchStudent()\\\" type=\\\"button\\\">Search</button>\\r\\n      <button class=\\\"btn-sm btn-secondary my-2 my-sm-0\\\" *ngIf =\\\"showHideButton\\\" (click)=\\\"hideSearchResults()\\\" type=\\\"button\\\">Hide</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"searchResults\\\">\\r\\n  <thead class=\\\"thead-dark\\\">\\r\\n    <tr>\\r\\n      <th scope=\\\"col\\\">Student Name</th>\\r\\n      <th scope=\\\"col\\\">Standard</th>\\r\\n      <th scope=\\\"col\\\">Options</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let student of searchResults\\\" class=\\\"table-bordered\\\">\\r\\n      <td>{{student.name}}</td>\\r\\n      <td>[ {{student.enrolledFor}} / {{student.stream}} ]</td>\\r\\n      <td>\\r\\n        <button class=\\\"btn-sm btn-info\\\" [routerLink]=\\\"['/studentprofile/'+ student._id]\\\">Profile</button>\\r\\n        <button class=\\\"btn-sm btn-primary\\\" disabled>Send SMS</button>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/search-student/search-student.component.html\n// module id = ../../../../../src/app/components/search-student/search-student.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { StudentService } from \"../../services/student.service\";\r\n\r\n@Component({\r\n  selector: 'app-search-student',\r\n  templateUrl: './search-student.component.html',\r\n  styleUrls: ['./search-student.component.css']\r\n})\r\nexport class SearchStudentComponent implements OnInit {\r\n\r\n  searchResults;\r\n  name;\r\n  showHideButton: boolean = false;\r\n\r\n  constructor(\r\n    private studentService: StudentService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  searchStudent() {\r\n    this.studentService.searchStudentByName(this.name).subscribe(data => {\r\n      if (data.success) {\r\n        this.searchResults = data.students;\r\n        console.log(this.searchResults); \r\n        this.showHideButton = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  hideSearchResults() {\r\n    this.searchResults = \"\";\r\n    this.name = \"\";\r\n    this.showHideButton = false;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/search-student/search-student.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/settings/settings.component.css\n// module id = ../../../../../src/app/components/settings/settings.component.css\n// module chunks = main","module.exports = \"<div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\r\\n  {{error}}\\r\\n</div>\\r\\n\\r\\n<div class=\\\"card\\\" *ngIf=\\\"academicYears\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    Academic Years\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"academicYears\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">#</th>\\r\\n          <th scope=\\\"col\\\">Year</th>\\r\\n          <th scope=\\\"col\\\">Options</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let year of academicYears;let i = index\\\" class=\\\"table-bordered\\\">\\r\\n          <td>{{i+1}}</td>\\r\\n          <td>{{year.year}}</td>\\r\\n          <td>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" *ngIf=\\\"!year.isCurrentYear\\\" (click)=\\\"SetCurrentYear(i)\\\">Set Current Year</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<br/>\\r\\n\\r\\n<div class=\\\"card\\\" *ngIf=\\\"academicYears\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      Batches\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"batches\\\">\\r\\n        <thead class=\\\"thead-dark\\\">\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">#</th>\\r\\n            <th scope=\\\"col\\\">Category</th>\\r\\n            <th scope=\\\"col\\\">Stream</th>\\r\\n            <th scope=\\\"col\\\">Standard</th>\\r\\n            <th scope=\\\"col\\\">Options</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let batch of batches;let i = index\\\" class=\\\"table-bordered\\\">\\r\\n            <td>{{i+1}}</td>\\r\\n            <td>{{batch.category}}</td>\\r\\n            <td>{{batch.stream}}</td>\\r\\n            <td>{{batch.name}}/{{batch.stream}}</td>\\r\\n            <td>\\r\\n              <button type=\\\"button\\\" class=\\\"btn-sm btn-secondary\\\" [routerLink]=\\\"['/editbatch/'+ batch._id ]\\\">Edit</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/settings/settings.component.html\n// module id = ../../../../../src/app/components/settings/settings.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { SettingsService } from \"../../services/settings.service\";\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n  batches;\r\n  academicYears;\r\n  error;\r\n\r\n\r\n  constructor(\r\n    private settingsService: SettingsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"list\");\r\n    this.settingsService.listAcademicYears().subscribe(data => {\r\n      if (data.success) {\r\n        this.academicYears = data.years;\r\n      }\r\n      else {\r\n        this.error = data.msg.message;\r\n      }\r\n    });\r\n\r\n    this.settingsService.listBatches().subscribe(data => {\r\n      if (data.success) {\r\n        this.batches = data.batches;\r\n        console.log(this.batches);\r\n      }\r\n      else {\r\n        this.error = data.msg.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  SetCurrentYear(index) {\r\n    if (this.academicYears) {\r\n      this.academicYears[index].isCurrentYear = true;\r\n      this.settingsService.setCurrentYear(this.academicYears[index]).subscribe(data => {\r\n        if (data.success) {\r\n          this.academicYears[index].isCurrentYear = true;\r\n        }\r\n        else {\r\n          this.error = data.msg.message;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/settings/settings.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/signup-student/signup-student.component.css\n// module id = ../../../../../src/app/components/signup-student/signup-student.component.css\n// module chunks = main","module.exports = \"<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\r\\n  <ol class=\\\"breadcrumb\\\">\\r\\n    <li class=\\\"breadcrumb-item\\\">\\r\\n      <a [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\r\\n    </li>\\r\\n    <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Sign up Student</li>\\r\\n  </ol>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\r\\n  {{error}}\\r\\n</div>\\r\\n\\r\\n<form ngNativeValidate class=\\\"bd-callout  bd-callout-yellow\\\" id=\\\"needs-validation\\\" ngNativeValidate>\\r\\n  <fieldset>\\r\\n    <legend>Sign Up</legend>\\r\\n    <hr/>\\r\\n\\r\\n    <!-- Name -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Name</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Email & birthday  -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-sm-12 col-md-4 col-lg-4\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Phone Number</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"number\\\" id=\\\"phoneNumber\\\" name=\\\"phoneNumber\\\" [(ngModel)]=\\\"phoneNumber\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-5 col-lg-5\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Email Address</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-3 col-lg-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Birth Date</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"date\\\" id=\\\"birthDate\\\" name=\\\"birthDate\\\" [(ngModel)]=\\\"birthDate\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onSignupSubmit()\\\">Sign Up</button>\\r\\n\\r\\n  </fieldset>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/signup-student/signup-student.component.html\n// module id = ../../../../../src/app/components/signup-student/signup-student.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UsersService } from '../../services/users.service';\r\nimport { StudentService } from '../../services/student.service';\r\nimport { ValidateService } from \"../../services/validate.service\";\r\n\r\n@Component({\r\n  selector: 'app-signup-student',\r\n  templateUrl: './signup-student.component.html',\r\n  styleUrls: ['./signup-student.component.css']\r\n})\r\nexport class SignupStudentComponent implements OnInit {\r\n\r\n  error: any;\r\n  email: string;\r\n  password: string;\r\n  consfirmpassword: string;\r\n  phoneNumber: string;\r\n  name: string;\r\n  birthDate: Date;\r\n  userDetails: any;\r\n\r\n  constructor(\r\n    private usersService: UsersService,\r\n    private validateService: ValidateService,\r\n    private studentService: StudentService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSignupSubmit() {\r\n\r\n    console.log(\"onSignupSubmit\");\r\n\r\n    if (!this.validateService.validateEmail(this.email)) {\r\n      this.error = \"Invalid Email Address\";\r\n    }\r\n    else {\r\n\r\n      this.password = this.phoneNumber.toString();\r\n\r\n      let newlyAddedUser = {\r\n        email: this.email,\r\n        birthDate: this.birthDate,\r\n        phoneNumber: this.phoneNumber,\r\n        name: this.name,\r\n        password: this.password,\r\n        role: \"Student\",\r\n        isAdmin: false,\r\n        isActive: false,\r\n        isDeleted: false\r\n      }\r\n\r\n      this.usersService.registerUser(newlyAddedUser).subscribe(user => {\r\n        if (user.success) {\r\n          this.router.navigate(['addstudent/'+ user.data._id]);\r\n        } else {\r\n          this.error = \"User record not found. Please check your login credentials\";\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/signup-student/signup-student.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/student-profile/student-profile.component.css\n// module id = ../../../../../src/app/components/student-profile/student-profile.component.css\n// module chunks = main","module.exports = \"<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\r\\n  <ol class=\\\"breadcrumb\\\">\\r\\n    <li class=\\\"breadcrumb-item\\\">\\r\\n      <a [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\r\\n    </li>\\r\\n    <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Student Profile</li>\\r\\n  </ol>\\r\\n</nav>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"student\\\">\\r\\n  <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n    <h3>\\r\\n      <strong> {{student.name}}\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"student.isCombinedAdmission\\\" (click)=\\\"admitToNextYear()\\\">Admit to Next Year</button>\\r\\n      </strong>\\r\\n    </h3>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ul class=\\\"nav nav-tabs\\\">\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"loadStudentInfo()\\\">\\r\\n    <a class=\\\"nav-link active show\\\" data-toggle=\\\"tab\\\" href=\\\"#studentinfo\\\">Student Information</a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"loadPaymentRecord()\\\">\\r\\n    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#payment\\\">Payment Record</a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"loadMarksRecord()\\\">\\r\\n    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#marks\\\">Marks Record</a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"loadAttendenceRecord()\\\">\\r\\n    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#attendence\\\">Attendence</a>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n<div id=\\\"myTabContent\\\" class=\\\"tab-content\\\">\\r\\n  <div class=\\\"tab-pane fade active show\\\" id=\\\"studentinfo\\\" *ngIf=\\\"student\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12 col-md-12 col-lg-4\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <h5>Basic Information</h5>\\r\\n          </div>\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <ul class=\\\"list-group list-group-flush\\\">\\r\\n              <li class=\\\"list-group-item\\\">\\r\\n                <strong>Academic Year:</strong> {{ student.currentYear }}</li>\\r\\n              <li class=\\\"list-group-item\\\">\\r\\n                <strong>Studying in:</strong> {{ student.currentStandard }}\\r\\n                <small>({{ student.stream }})</small>/ {{ student.course }}</li>\\r\\n              <li class=\\\"list-group-item\\\">\\r\\n                <strong>Enrolled For:</strong> {{ student.enrolledFor }}</li>\\r\\n              <li class=\\\"list-group-item\\\" *ngIf=\\\"student.hasEnrolledForEntrance\\\">\\r\\n                <strong>Entrance:</strong> {{ student.entrance }}</li>\\r\\n            </ul>\\r\\n\\r\\n            <div class=\\\"card-footer text-muted\\\">\\r\\n              <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"['/updatestudent/'+ student._id]\\\">Edit</a>\\r\\n              <!-- <a class=\\\"btn btn-danger\\\" href=\\\"#\\\">Delete</a> -->\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-12 col-md-12 col-lg-8\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <h5>Other Information</h5>\\r\\n          </div>\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <ul class=\\\"list-group list-group-flush\\\">\\r\\n              <li class=\\\"list-group-item\\\">\\r\\n                <strong>Branch:</strong> {{ student.branch }}, {{ student.classSession }} batch</li>\\r\\n              <li class=\\\"list-group-item\\\">\\r\\n                <strong>College:</strong> {{ student.instituteInfo.name }}</li>\\r\\n              <li class=\\\"list-group-item\\\">\\r\\n                <strong>College Timing:</strong> {{ student.instituteInfo.timing }}</li>\\r\\n              <li class=\\\"list-group-item\\\">\\r\\n                <strong>Address:</strong> {{ student.address }}</li>\\r\\n              <li class=\\\"list-group-item\\\" *ngIf=\\\"student.contactDetails\\\">\\r\\n                <strong>Contact Details:</strong>\\r\\n                <div *ngFor=\\\"let number of student.contactDetails\\\">\\r\\n                  <span class=\\\"glyphicon glyphicon-phone\\\"></span> {{ number }}</div>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"tab-pane fade\\\" id=\\\"payment\\\">\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"student && fees\\\">\\r\\n      <div class=\\\"col-sm-12 col-md-12 col-lg-4\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <h5>Payment Details</h5>\\r\\n          </div>\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <ul class=\\\"list-group list-group-flush\\\">\\r\\n              <li class=\\\"list-group-item\\\">\\r\\n                <!-- total fees to pay -->\\r\\n                <strong>Course Fee:</strong>Rs. {{ fees.totalFeesToPay }}</li>\\r\\n              <li class=\\\"list-group-item\\\">\\r\\n                <strong>Concession: </strong>Rs. {{ fees.concession }}</li>\\r\\n              <li class=\\\"list-group-item\\\">\\r\\n                <strong>Total Paid Fees:</strong>Rs. {{ fees.totalPaidFees }}</li>\\r\\n              <li class=\\\"list-group-item\\\">\\r\\n                <strong>Expected Date of Completion: </strong>\\r\\n                <br /> {{ fees.expectedDateOfCompletion | date:'dd-MM-yyyy' }}</li>\\r\\n            </ul>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"card-footer\\\">\\r\\n            <h4 *ngIf=\\\"!fees.isPaid\\\" style=\\\"color:red\\\">Balance Fees: <br/>\\r\\n              <strong> Rs. {{ fees.totalFees - fees.totalPaidFees - fees.concession }}</strong>\\r\\n            </h4>\\r\\n            <h3 *ngIf=\\\"fees.isPaid\\\" style=\\\"color:green\\\">Full Paid</h3>\\r\\n            <button type=\\\"button\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\" *ngIf=\\\"showAddInstallmentbtn\\\" class=\\\"btn btn-info\\\"\\r\\n              (click)=\\\"changeAddState()\\\">Add Installment</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-12 col-md-12 col-lg-8\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header\\\">\\r\\n            <h5>Fees Details <strong style=\\\"color:#FFEB3B\\\" *ngIf=\\\"balanceInstallmentAmount\\\">(Balance Installment: Rs. {{ balanceInstallmentAmount }})</strong></h5> \\r\\n          </div>\\r\\n          <div class=\\\"card-block\\\">\\r\\n            <table class=\\\"table table-hover\\\" *ngIf=\\\"paymentHistory\\\">\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th scope=\\\"col\\\">#</th>\\r\\n                  <th scope=\\\"col\\\">Amount</th>\\r\\n                  <th scope=\\\"col\\\">Due Date</th>\\r\\n                  <th scope=\\\"col\\\">Remark</th>\\r\\n                  <th scope=\\\"col\\\">Options</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor=\\\"let inst of paymentHistory; let i = index\\\">\\r\\n                  <td>{{ i+1 }}</td>\\r\\n                  <td>{{ inst.amount }}</td>\\r\\n                  <td>{{ inst.paymentDate | date:'dd-MM-yyyy' }}</td>\\r\\n                  <td>\\r\\n                    <strong *ngIf=\\\"inst.isPaid\\\" style=\\\"color:green\\\">R.No.{{ inst.receiptNumber }} (Paid)</strong>\\r\\n                    <strong *ngIf=\\\"!inst.isPaid\\\" style=\\\"color:red\\\">Not Paid</strong>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <button class=\\\"button btn-primary\\\" *ngIf=\\\"inst.isPaid\\\" [routerLink]=\\\"['/paymenthistory/'+ inst._id]\\\">Show Payment History</button>\\r\\n                    <button class=\\\"button btn-info\\\" *ngIf=\\\"!inst.isPaid\\\" (click)=\\\"changeEditState(inst,i)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">Edit</button>\\r\\n                    <button class=\\\"button btn-success\\\" *ngIf=\\\"!inst.isPaid\\\" [routerLink]=\\\"['/addPayment/'+ inst._id]\\\">Make Payment</button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"tab-pane fade\\\" id=\\\"marks\\\">\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"tab-pane fade\\\" id=\\\"attendence\\\">\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal fade bd-example-modal-sm\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\"\\r\\n  aria-hidden=\\\"true\\\">\\r\\n  <div class=\\\"modal-dialog modal-sm\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header\\\">\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\" *ngIf=\\\"addState\\\">Add Installment</h5>\\r\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\" *ngIf=\\\"editState\\\">Edit Installment</h5>\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <!-- Form to add/edit installment -->\\r\\n        <form *ngIf=\\\"addState || editState\\\">\\r\\n          <div class=\\\"form-row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <label for=\\\"installment-amt\\\" class=\\\"col-form-label\\\">Amount:</label>\\r\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"installment-amt\\\" name=\\\"amount\\\" [(ngModel)]=\\\"amount\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <label for=\\\"message-text\\\" class=\\\"col-form-label\\\">Due Date:</label>\\r\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"installment-dueDate\\\" name=\\\"paymentDate\\\" [(ngModel)]=\\\"paymentDate\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"addState\\\" (click)=\\\"addInstallment()\\\">Add Installment</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"editState\\\" (click)=\\\"updateInstallmentDetails()\\\">Save changes</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/student-profile/student-profile.component.html\n// module id = ../../../../../src/app/components/student-profile/student-profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { StudentService } from \"../../services/student.service\";\r\nimport { FeesdetailsService } from \"../../services/feesdetails.service\";\r\nimport { PaymentService } from \"../../services/payment.service\";\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-student-profile',\r\n  templateUrl: './student-profile.component.html',\r\n  styleUrls: ['./student-profile.component.css']\r\n})\r\nexport class StudentProfileComponent implements OnInit {\r\n\r\n  id: any;\r\n  student: any;\r\n  fees: any;\r\n  paymentDetail: any;\r\n  paymentHistory: any;\r\n  amount: any;\r\n  paymentDate: any;\r\n  addState: boolean = false;\r\n  editState: boolean = false;\r\n  itemToEdit: any;\r\n  index: number;\r\n  balanceInstallmentAmount: number = 0;\r\n  showAddInstallmentbtn: boolean = true;\r\n  expectedDateOfCompletion;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private studentService: StudentService,\r\n    private feesdetailsService: FeesdetailsService,\r\n    private paymentService: PaymentService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // get student id\r\n    this.id = this.route.snapshot.params['id'];\r\n\r\n    // get feesdetails\r\n    // get payment history\r\n    // get student details\r\n    this.loadStudentInfo();\r\n  }\r\n\r\n  loadPaymentRecord(){\r\n    this.getFeesDetailsHistory();\r\n    this.getPaymentHistory();\r\n  }\r\n\r\n  loadStudentInfo() {\r\n    this.studentService.getStudentDetailsById(this.id).subscribe(studentData => {\r\n      if (studentData.success) {\r\n        this.student = studentData.student;\r\n        if(this.student.isCombinedAdmission)\r\n        this.student.isCombinedAdmission = false;\r\n        console.log(this.student);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadMarksRecord(){\r\n\r\n  }\r\n\r\n  loadAttendenceRecord(){\r\n    \r\n  }\r\n\r\n  getFeesDetailsHistory() {\r\n    this.feesdetailsService.getFeesDetailsByStudentId(this.id).subscribe(feesData => {\r\n      if (feesData.success) {\r\n        console.log(\"getting feesData\");\r\n        this.fees = feesData.feesDetails;\r\n        console.log(feesData.feesDetails);\r\n        this.checkBalanceInstallmentAmount();\r\n      }\r\n    });\r\n  }\r\n\r\n  getPaymentHistory() {\r\n    this.paymentService.getPaymentRecordByStudentId(this.id).subscribe(paymentData => {\r\n      if (paymentData.success) {\r\n        console.log(\"getting paymentData\");\r\n        this.paymentHistory = paymentData.paymentDetails;\r\n      }\r\n    });\r\n  }\r\n\r\n  checkBalanceInstallmentAmount() {\r\n    this.balanceInstallmentAmount = Number(this.fees.totalFeesToPay) - Number(this.fees.totalInstallmentAmount);\r\n    this.showAddInstallmentbtn = this.balanceInstallmentAmount == 0 ? false : true;\r\n    this.fees.isPaid = this.fees.isPaid;\r\n  }\r\n\r\n\r\n  findTotalInstallmentAmount(id?) {\r\n    let total: number = 0;\r\n    this.paymentHistory.forEach(element => {\r\n      if (element._id != id)\r\n        total = Number(total) + Number(element.amount);\r\n      else if (id == undefined)\r\n        total = Number(total) + Number(element.amount);\r\n    });\r\n    return total;\r\n  }\r\n\r\n  ////////////////////////////\r\n  // Code to Add installment\r\n  ////////////////////////////\r\n  addInstallment() {\r\n    this.addState = true;\r\n    console.log(\"from addNewInstallment\");\r\n\r\n    let newTotalInstallmentAmount = this.findTotalInstallmentAmount() + Number(this.amount);\r\n    if (newTotalInstallmentAmount <= Number(this.fees.totalFeesToPay)) {\r\n      this.fees.totalInstallmentAmount = Number(this.fees.totalInstallmentAmount) + Number(this.amount);\r\n\r\n      console.log(this.paymentDate);\r\n      console.log(this.amount);\r\n      //add new installment\r\n      this.feesdetailsService.updateFeesDetails(this.fees).subscribe(feesData => {\r\n        if (feesData.success) {\r\n\r\n          //add paymentdetail record\r\n          let paymentDetail = {\r\n            studentId: this.id,\r\n            studentName: this.student.name,\r\n            feesDetailsId: this.fees._id,\r\n            stream: this.student.stream,\r\n            enrolledFor: this.student.enrolledFor,\r\n            receiptNumber: 0,\r\n            isPaid: false,\r\n            paymentDate: this.paymentDate,\r\n            amount: this.amount,\r\n            modeOfPayment: \"\",\r\n            bankName: \"\",\r\n            branch: \"\",\r\n            chequeDate: new Date().getDate(),\r\n            chequeNumber: \"\",\r\n            remark: \"\",\r\n            createdAt: new Date().getDate(),\r\n            isDeleted: false\r\n          }\r\n\r\n          this.paymentService.addNewPayment(paymentDetail).subscribe(paymentData => {\r\n            if (paymentData.success) {\r\n              this.checkBalanceInstallmentAmount();\r\n              this.amount = \"\";\r\n              this.paymentDate = \"\";\r\n              $(\"#exampleModal\").modal('hide');\r\n              this.getPaymentHistory();\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    else{\r\n      alert(\"Please check the balance installment amount.\");\r\n      this.amount = \"\";\r\n      this.paymentDate = \"\";\r\n      $(\"#exampleModal\").modal('hide');\r\n    }\r\n  }\r\n\r\n  changeAddState() {\r\n    this.addState = true;\r\n  }\r\n\r\n  ////////////////////////////\r\n  // Code to edit installment\r\n  ////////////////////////////\r\n  changeEditState(inst, index) {\r\n    this.itemToEdit = inst;\r\n    this.editState = true;\r\n    this.amount = inst.amount;\r\n    this.paymentDate = inst.paymentDate;\r\n    this.index = index;\r\n  }\r\n\r\n  admitToNextYear(){\r\n    console.log(\"Admit to Next Year\");\r\n  }\r\n\r\n  //update this\r\n  updateInstallmentDetails() {\r\n    console.log(\"from updateInstallment\");\r\n\r\n    let newTotalInstallmentAmount = this.findTotalInstallmentAmount(this.paymentHistory[this.index]._id) + Number(this.amount);\r\n    if (newTotalInstallmentAmount <= Number(this.fees.totalFeesToPay)) {\r\n      this.fees.totalInstallmentAmount = newTotalInstallmentAmount;\r\n      this.feesdetailsService.updateFeesDetails(this.fees).subscribe(feesData =>{\r\n        if(feesData.success){\r\n          \r\n        this.paymentHistory[this.index].amount = this.amount;\r\n        this.paymentHistory[this.index].paymentDate = this.paymentDate;\r\n        this.paymentService.updatePaymentDetails(this.paymentHistory[this.index]).subscribe(paymentData => {\r\n          if(paymentData.success){\r\n            this.getPaymentHistory();\r\n            this.amount = \"\";\r\n            this.paymentDate = \"\";\r\n            $(\"#exampleModal\").modal('hide');\r\n            this.checkBalanceInstallmentAmount();\r\n          }\r\n        });\r\n\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/student-profile/student-profile.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".cust-btn{\\r\\n    margin-left: 2px;\\r\\n    margin-right: 2px;\\r\\n}\\r\\n\\r\\n.search-results{\\r\\n    border: 1px solid rgba(0, 0, 0, 0.125);\\r\\n    background-color: #eeeeee;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/students-listing/students-listing.component.css\n// module id = ../../../../../src/app/components/students-listing/students-listing.component.css\n// module chunks = main","module.exports = \"<div class=\\\"alert alert-dismissible alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\">\\r\\n  {{error}}\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-2\\\">\\r\\n    <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Select Year</label>\\r\\n  </div>\\r\\n  <div class=\\\"col-10\\\">\\r\\n    <select id=\\\"academicyear\\\" class=\\\"custom-select\\\" name=\\\"year\\\" [(ngModel)]=\\\"year\\\">\\r\\n      <option *ngFor=\\\"let year of academicYears\\\" selected=\\\"{{year.isCurrentYear}}\\\" value=\\\"{{year.year}}\\\">{{year.year}}</option>\\r\\n    </select>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<br/>\\r\\n\\r\\n<ul class=\\\"nav nav-tabs\\\">\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"loadBatchButtons('English')\\\">\\r\\n    <a class=\\\"nav-link active show\\\" data-toggle=\\\"tab\\\" href=\\\"#english\\\">English Medium</a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"loadBatchButtons('Marathi')\\\">\\r\\n    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#marathi\\\">Marathi Medium</a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"loadBatchButtons('Semi-English')\\\">\\r\\n    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#semienglish\\\">Semi-English Medium</a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"loadBatchButtons('Commerce')\\\">\\r\\n    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#commerce\\\">Commerce</a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"loadBatchButtons('Arts')\\\">\\r\\n    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#arts\\\">Arts</a>\\r\\n  </li>\\r\\n  <li class=\\\"nav-item\\\" (click)=\\\"loadBatchButtons('Science')\\\">\\r\\n    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#science\\\">Science</a>\\r\\n  </li>\\r\\n</ul>\\r\\n\\r\\n<div id=\\\"myTabContent\\\" class=\\\"tab-content\\\">\\r\\n  <div class=\\\"tab-pane fade active show\\\" id=\\\"english\\\">\\r\\n    <br/>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <button type=\\\"button\\\" *ngFor=\\\"let batchBtn of batchesByTab\\\" class=\\\"btn btn-primary cust-btn\\\" (click)=\\\"listStudents(batchBtn.category, batchBtn.stream, batchBtn.enrolledFor, batchBtn.course, batchBtn.classSession)\\\">\\r\\n          {{batchBtn.name}}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <br/>\\r\\n    <table class=\\\"table table-sm table-hover searchresults\\\" *ngIf=\\\"englishMediumData\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Sr.No.</th>\\r\\n          <th scope=\\\"col\\\">Student Name</th>\\r\\n          <th scope=\\\"col\\\">Standard</th>\\r\\n          <th scope=\\\"col\\\">Session</th>\\r\\n          <th scope=\\\"col\\\">Contact Numbers</th>\\r\\n          <th scope=\\\"col\\\">School Name</th>\\r\\n          <th scope=\\\"col\\\">Options</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let student of englishMediumData; let i = index\\\" class=\\\"table-bordered\\\">\\r\\n          <td>{{i+1}}</td>\\r\\n          <td>{{student.name}}\\r\\n            <br/> [ {{student.enrolledFor}} / {{student.course}} ]\\r\\n          </td>\\r\\n          <td>{{student.currentStandard}}</td>\\r\\n          <td>{{student.classSession}}</td>\\r\\n          <td>\\r\\n            <div *ngFor=\\\"let number of student.contactDetails\\\">\\r\\n              {{ number }}\\r\\n            </div>\\r\\n          </td>\\r\\n          <td>{{student.instituteInfo.name}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn-sm btn-info\\\" [routerLink]=\\\"['/studentprofile/'+ student._id]\\\">Profile</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"tab-pane fade\\\" id=\\\"marathi\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <button type=\\\"button\\\" *ngFor=\\\"let batchBtn of batchesByTab\\\" class=\\\"btn btn-primary cust-btn\\\" (click)=\\\"listStudents(batchBtn.category, batchBtn.stream, batchBtn.enrolledFor, batchBtn.course, batchBtn.classSession)\\\">\\r\\n          {{batchBtn.name}}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"marathiMediumData\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Sr.No.</th>\\r\\n          <th scope=\\\"col\\\">Student Name</th>\\r\\n          <th scope=\\\"col\\\">Standard</th>\\r\\n          <th scope=\\\"col\\\">Session</th>\\r\\n          <th scope=\\\"col\\\">Contact Numbers</th>\\r\\n          <th scope=\\\"col\\\">School Name</th>\\r\\n          <th scope=\\\"col\\\">Options</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let student of marathiMediumData; let i = index\\\" class=\\\"table-bordered\\\">\\r\\n          <td>{{i+1}}</td>\\r\\n          <td>{{student.name}}\\r\\n            <br/> [ {{student.enrolledFor}} / {{student.course}} ]\\r\\n          </td>\\r\\n          <td>{{student.currentStandard}}</td>\\r\\n          <td>{{student.classSession}}</td>\\r\\n          <td>\\r\\n            <div *ngFor=\\\"let number of student.contactDetails\\\">\\r\\n              {{ number }}\\r\\n            </div>\\r\\n          </td>\\r\\n          <td>{{student.instituteInfo.name}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn-sm btn-info\\\" [routerLink]=\\\"['/studentprofile/'+ student._id]\\\">Profile</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"tab-pane fade\\\" id=\\\"semienglish\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <button type=\\\"button\\\" *ngFor=\\\"let batchBtn of batchesByTab\\\" class=\\\"btn btn-primary cust-btn\\\" (click)=\\\"listStudents(batchBtn.category, batchBtn.stream, batchBtn.enrolledFor, batchBtn.course, batchBtn.classSession)\\\">\\r\\n          {{batchBtn.name}}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"semienglishMediumData\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Sr.No.</th>\\r\\n          <th scope=\\\"col\\\">Student Name</th>\\r\\n          <th scope=\\\"col\\\">Standard</th>\\r\\n          <th scope=\\\"col\\\">Session</th>\\r\\n          <th scope=\\\"col\\\">Contact Numbers</th>\\r\\n          <th scope=\\\"col\\\">School Name</th>\\r\\n          <th scope=\\\"col\\\">Options</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let student of semienglishMediumData; let i = index\\\" class=\\\"table-bordered\\\">\\r\\n          <td>{{i+1}}</td>\\r\\n          <td>{{student.name}}\\r\\n            <br/> [ {{student.enrolledFor}} / {{student.course}} ]\\r\\n          </td>\\r\\n          <td>{{student.currentStandard}}</td>\\r\\n          <td>{{student.classSession}}</td>\\r\\n          <td>\\r\\n            <div *ngFor=\\\"let number of student.contactDetails\\\">\\r\\n              {{ number }}\\r\\n            </div>\\r\\n          </td>\\r\\n          <td>{{student.instituteInfo.name}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn-sm btn-info\\\" [routerLink]=\\\"['/studentprofile/'+ student._id]\\\">Profile</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"tab-pane fade\\\" id=\\\"commerce\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <button type=\\\"button\\\" *ngFor=\\\"let batchBtn of batchesByTab\\\" class=\\\"btn btn-primary cust-btn\\\" (click)=\\\"listCommerceStudents(batchBtn.enrolledFor, batchBtn.course, batchBtn.classSession)\\\">\\r\\n          {{batchBtn.name}}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"commerceSectionData\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Sr.No.</th>\\r\\n          <th scope=\\\"col\\\">Student Name</th>\\r\\n          <th scope=\\\"col\\\">Standard</th>\\r\\n          <th scope=\\\"col\\\">Session</th>\\r\\n          <th scope=\\\"col\\\">Contact Numbers</th>\\r\\n          <th scope=\\\"col\\\">School Name</th>\\r\\n          <th scope=\\\"col\\\">Options</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let student of commerceSectionData; let i = index\\\" class=\\\"table-bordered\\\">\\r\\n          <td>{{i+1}}</td>\\r\\n          <td>{{student.name}}\\r\\n            <br/> [ {{student.enrolledFor}} / {{student.course}} ]\\r\\n          </td>\\r\\n          <td>{{student.currentStandard}}</td>\\r\\n          <td>{{student.classSession}}</td>\\r\\n          <td>\\r\\n            <div *ngFor=\\\"let number of student.contactDetails\\\">\\r\\n              {{ number }}\\r\\n            </div>\\r\\n          </td>\\r\\n          <td>{{student.instituteInfo.name}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn-sm btn-info\\\" [routerLink]=\\\"['/studentprofile/'+ student._id]\\\">Profile</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"tab-pane fade\\\" id=\\\"arts\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <button type=\\\"button\\\" *ngFor=\\\"let batchBtn of batchesByTab\\\" class=\\\"btn btn-primary cust-btn\\\" (click)=\\\"listArtsStudents(batchBtn.enrolledFor, batchBtn.course, batchBtn.classSession)\\\">\\r\\n          {{batchBtn.name}}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <table class=\\\"table table-sm table-hover\\\" *ngIf=\\\"artsSectionData\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Sr.No.</th>\\r\\n          <th scope=\\\"col\\\">Student Name</th>\\r\\n          <th scope=\\\"col\\\">Standard</th>\\r\\n          <th scope=\\\"col\\\">Session</th>\\r\\n          <th scope=\\\"col\\\">Contact Numbers</th>\\r\\n          <th scope=\\\"col\\\">School Name</th>\\r\\n          <th scope=\\\"col\\\">Options</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let student of artsSectionData; let i = index\\\" class=\\\"table-bordered\\\">\\r\\n          <td>{{i+1}}</td>\\r\\n          <td>{{student.name}}\\r\\n            <br/> [ {{student.enrolledFor}} / {{student.course}} ]\\r\\n          </td>\\r\\n          <td>{{student.currentStandard}}</td>\\r\\n          <td>{{student.classSession}}</td>\\r\\n          <td>\\r\\n            <div *ngFor=\\\"let number of student.contactDetails\\\">\\r\\n              {{ number }}\\r\\n            </div>\\r\\n          </td>\\r\\n          <td>{{student.instituteInfo.name}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn-sm btn-info\\\" [routerLink]=\\\"['/studentprofile/'+ student._id]\\\">Profile</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"tab-pane fade\\\" id=\\\"science\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <button type=\\\"button\\\" *ngFor=\\\"let batchBtn of batchesByTab\\\" class=\\\"btn btn-primary cust-btn\\\" (click)=\\\"listScienceStudents(batchBtn.enrolledFor, batchBtn.course, batchBtn.classSession, batchBtn.entrance)\\\">\\r\\n          {{batchBtn.name}}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <table class=\\\"table table-sm table-hover searchresults\\\" *ngIf=\\\"scienceSectionData\\\">\\r\\n      <thead class=\\\"thead-dark\\\">\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Sr.No.</th>\\r\\n          <th scope=\\\"col\\\">Student Name</th>\\r\\n          <th scope=\\\"col\\\">Standard</th>\\r\\n          <th scope=\\\"col\\\">Session</th>\\r\\n          <th scope=\\\"col\\\">Contact Numbers</th>\\r\\n          <th scope=\\\"col\\\">School Name</th>\\r\\n          <th scope=\\\"col\\\">Options</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let student of scienceSectionData; let i = index\\\" class=\\\"table-bordered\\\">\\r\\n          <td>{{i+1}}</td>\\r\\n          <td>{{student.name}}\\r\\n            <br/> [ {{student.enrolledFor}} / {{student.course}} ]\\r\\n          </td>\\r\\n          <td>{{student.currentStandard}}</td>\\r\\n          <td>{{student.classSession}}</td>\\r\\n          <td>\\r\\n            <div *ngFor=\\\"let number of student.contactDetails\\\">\\r\\n              {{ number }}\\r\\n            </div>\\r\\n          </td>\\r\\n          <td>{{student.instituteInfo.name}}</td>\\r\\n          <td>\\r\\n            <button class=\\\"btn-sm btn-info\\\" [routerLink]=\\\"['/studentprofile/'+ student._id]\\\">Profile</button>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/students-listing/students-listing.component.html\n// module id = ../../../../../src/app/components/students-listing/students-listing.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { SettingsService } from '../../services/settings.service';\r\nimport { StudentService } from \"../../services/student.service\";\r\n\r\n@Component({\r\n  selector: 'app-students-listing',\r\n  templateUrl: './students-listing.component.html',\r\n  styleUrls: ['./students-listing.component.css']\r\n})\r\nexport class StudentsListingComponent implements OnInit {\r\n\r\n  year;\r\n  course: string = \"Regular\";\r\n  classSession;\r\n  category;\r\n  stream;\r\n  enrolledFor;\r\n  entrance;\r\n  offeredSubjects;\r\n  students;\r\n\r\n  error;\r\n  academicYears;\r\n  englishMediumData;\r\n  marathiMediumData;\r\n  semienglishMediumData;\r\n  commerceSectionData;\r\n  artsSectionData;\r\n  scienceSectionData;\r\n  batches;\r\n  batchesByTab;\r\n\r\n  constructor(\r\n    private studentService: StudentService,\r\n    private settingsService: SettingsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    console.log('students-listing');\r\n    this.settingsService.listAcademicYears().subscribe(data => {\r\n      if (data.success) {\r\n        this.academicYears = data.years;\r\n        var currentYear = this.academicYears.filter(function (year) {\r\n          return year.isCurrentYear == true;\r\n        })[0].year;\r\n        console.log(currentYear);\r\n\r\n        this.settingsService.listBatches(currentYear).subscribe(batchData => {\r\n          if (batchData.success) {\r\n            console.log(batchData.batches);\r\n            this.batches = batchData.batches;\r\n            // default to first tab\r\n            this.loadBatchButtons(\"English\");\r\n          } else {\r\n            this.error = batchData.msg.message;\r\n          }\r\n        })\r\n      }\r\n      else {\r\n        this.error = data.msg.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  // Load batches buttons\r\n  loadBatchButtons(stream){\r\n    this.batchesByTab = this.batches.filter(function (batch) {\r\n      return batch.stream == stream;\r\n    });\r\n  }\r\n\r\n  checkIfCollegeSection() {\r\n    return this.category == \"College Section\";\r\n  }\r\n\r\n  checkIfSchoolSection() {\r\n    return this.category == \"School Section\";\r\n  }\r\n\r\n  checkIfScienceStream() {\r\n    return this.stream == \"Science\";\r\n  }\r\n\r\n  checkIfCommerceStream() {\r\n    return this.stream == \"Commerce\";\r\n  }\r\n\r\n  checkIfArtsStream() {\r\n    return this.stream == \"Arts\";\r\n  }\r\n\r\n  // unselects all radio inputs on change of category\r\n  unselectAll() {\r\n    this.stream = \"\";\r\n    this.enrolledFor = \"\";\r\n    this.entrance = \"\";\r\n    this.offeredSubjects = \"\";\r\n    this.classSession = \"\";\r\n    this.course = \"Regular\";\r\n  }\r\n\r\n  listStudents(category, stream, enrolledFor, course, classSession) {\r\n\r\n    this.studentService.searchSchoolSectionStudents(category, stream, enrolledFor, course, classSession).subscribe(studentsData => {\r\n      if (studentsData.success) {\r\n        this.students = studentsData.students;\r\n        if (stream == \"English\")\r\n          this.englishMediumData = studentsData.students;\r\n        if (stream == \"Semi-English\")\r\n          this.semienglishMediumData = studentsData.students;\r\n        if (stream == \"Marathi\")\r\n          this.marathiMediumData = studentsData.students;\r\n      }\r\n      else\r\n        this.error = studentsData.msg.message;\r\n    });\r\n  }\r\n\r\n  listScienceStudents(enrolledFor, course, classSession, entrance?) {\r\n    console.log(\"from listScienceStudents\");\r\n\r\n    this.studentService.searchCollegeSectionStudents(\"College Section\", \"Science\", enrolledFor, course, classSession, entrance).subscribe(studentsData => {\r\n      if (studentsData.success) {\r\n        this.scienceSectionData = studentsData.students;\r\n      }\r\n    });\r\n  }\r\n\r\n  listCommerceStudents(enrolledFor, course, classSession, entrance?) {\r\n    console.log(\"from listCommerceStudents\");\r\n\r\n    this.studentService.searchCollegeSectionStudents(\"College Section\", \"Commerce\", enrolledFor, course, classSession, entrance).subscribe(studentsData => {\r\n      if (studentsData.success) {\r\n        this.commerceSectionData = studentsData.students;\r\n      }\r\n    });\r\n  }\r\n\r\n  listArtsStudents(enrolledFor, course, classSession, entrance?) {\r\n    console.log(\"from listArtsStudents\");\r\n\r\n    this.studentService.searchCollegeSectionStudents(\"College Section\", \"Arts\", enrolledFor, course, classSession, entrance).subscribe(studentsData => {\r\n      if (studentsData.success) {\r\n        this.listArtsStudents = studentsData.students;\r\n      }\r\n    });\r\n  }\r\n\r\n  showCourses() {\r\n    return (this.enrolledFor == \"X\" || this.enrolledFor == \"XII\");\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/students-listing/students-listing.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/update-student/update-student.component.css\n// module id = ../../../../../src/app/components/update-student/update-student.component.css\n// module chunks = main","module.exports = \"<nav aria-label=\\\"breadcrumb\\\" role=\\\"navigation\\\">\\r\\n  <ol class=\\\"breadcrumb\\\">\\r\\n    <li class=\\\"breadcrumb-item\\\">\\r\\n      <a [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>\\r\\n    </li>\\r\\n    <li class=\\\"breadcrumb-item\\\">\\r\\n      <a [routerLink]=\\\"['/studentprofile/'+ id ]\\\">Student Profile</a>\\r\\n    </li>\\r\\n    <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Update Student Information</li>\\r\\n  </ol>\\r\\n</nav>\\r\\n\\r\\n<form ngNativeValidate class=\\\"bd-callout  bd-callout-yellow\\\" id=\\\"needs-validation\\\">\\r\\n  <fieldset>\\r\\n    <legend>Update Information</legend>\\r\\n    <hr/>\\r\\n\\r\\n    <!-- Name -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-12\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Name</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"name\\\" [(ngModel)]=\\\"name\\\" disabled>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Select Year</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <select id=\\\"academicyear\\\" class=\\\"custom-select\\\" name=\\\"year\\\" [(ngModel)]=\\\"year\\\">\\r\\n          <option *ngFor=\\\"let year of academicYears\\\" value=\\\"{{year.year}}\\\">{{year.year}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Category -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Category</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" (click)=\\\"unselectAll()\\\" name=\\\"category\\\" [(ngModel)]=\\\"category\\\" id=\\\"categoryRdo\\\"\\r\\n              value=\\\"School Section\\\" checked> School Section\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" (click)=\\\"unselectAll()\\\" name=\\\"category\\\" [(ngModel)]=\\\"category\\\" id=\\\"categoryRdo\\\"\\r\\n              value=\\\"College Section\\\"> College Section\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Stream If college section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"category == 'School Section'\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Medium</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"engRdo\\\" value=\\\"English\\\"> English\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"semiRdo\\\" value=\\\"Semi-English\\\"> Semi-English\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"marRdo\\\" value=\\\"Marathi\\\"> Marathi\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Stream If college section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"checkIfCollegeSection()\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Stream</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"sciRdo\\\" value=\\\"Science\\\"> Science\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"comRdo\\\" value=\\\"Commerce\\\"> Commerce\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"stream\\\" [(ngModel)]=\\\"stream\\\" id=\\\"artsRdo\\\" value=\\\"Arts\\\"> Arts\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Enrolled for : options specific to school section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"category == 'School Section'\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Enrolled For</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"viiiRdo\\\" value=\\\"VIII\\\"> VIII\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"ixRdo\\\" value=\\\"IX\\\"> IX\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"ixAndxRdo\\\" value=\\\"IX + X\\\"> IX + X\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xRdo\\\" value=\\\"X\\\"> X\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Enrolled for : options specific to College section -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"category == 'College Section'\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Enrolled For</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xiRdo\\\" value=\\\"XI\\\"> XI\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xiiRdo\\\" value=\\\"XII\\\"> XII\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"standardRdo\\\" [(ngModel)]=\\\"enrolledFor\\\" id=\\\"xiAndxiiRdo\\\" value=\\\"XI + XII\\\"> XI + XII\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Enrolled for : options specific to Science stream -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"stream == 'Science'\\\">\\r\\n      <div class=\\\"col-2\\\"></div>\\r\\n      <div class=\\\"col-10\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"noneRdo\\\" value=\\\"None\\\"> None\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"medicalEntRdo\\\" value=\\\"NEET\\\"> NEET\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"enggEntRdo\\\" value=\\\"MH-CET\\\"> MH-CET\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"entranceRdo\\\" [(ngModel)]=\\\"entrance\\\" id=\\\"bothEntRdo\\\" value=\\\"NEET + MH-CET\\\"> NEET + MH-CET\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- Subjects specific to Science stream -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"stream == 'Science'\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Subjects Offered</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-3\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"pcbRdo\\\" value=\\\"PCB\\\"> PCB\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"pcmRdo\\\" value=\\\"PCM\\\"> PCM\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"pcmbRdo\\\" value=\\\"PCMB\\\"> PCMB\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Subjects specific to Commerce stream -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"stream == 'Commerce'\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Subjects Offered</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"spRdo\\\" value=\\\"All subjects with SP\\\"> All subjects with SP\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"mathsRdo\\\" value=\\\"All subjects with Maths\\\"> All subjects with Maths\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Subjects specific to Arts stream -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"stream == 'Arts'\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Subjects Offered</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"foursubRdo\\\" value=\\\"4 Subjects\\\"> 4 Subjects\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"coursesOfferedRdo\\\" [(ngModel)]=\\\"offeredSubjects\\\" id=\\\"allsubRdo\\\" value=\\\"All Subjects\\\"> All Subjects\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Courses -->\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showCourses()\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Course</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"courseRadios\\\" [(ngModel)]=\\\"course\\\" id=\\\"vacationRdo\\\" value=\\\"Vacation\\\"> Vacation\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"courseRadios\\\" [(ngModel)]=\\\"course\\\" id=\\\"regularRdo\\\" value=\\\"Regular\\\"> Regular\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Class Session -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Class Session</label>\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" [(ngModel)]=\\\"classSession\\\" id=\\\"morningRdo\\\" value=\\\"Morning\\\"> Morning\\r\\n          </label>\\r\\n          <label class=\\\"form-check-label\\\">\\r\\n            <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optionsRadios\\\" [(ngModel)]=\\\"classSession\\\" id=\\\"evenRdo\\\" value=\\\"Evening\\\"> Evening\\r\\n          </label>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Address -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-12\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Address</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"address\\\" [(ngModel)]=\\\"address\\\" required>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Institution Information -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-9\\\" *ngIf=\\\"checkIfCollegeSection()\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Name of the College</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"instituteName\\\" [(ngModel)]=\\\"instituteName\\\"\\r\\n          required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-9\\\" *ngIf=\\\"!checkIfCollegeSection()\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Name of the School</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"instituteName\\\" [(ngModel)]=\\\"instituteName\\\"\\r\\n          required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-3\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Timing</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"instituteTiming\\\" [(ngModel)]=\\\"instituteTiming\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- Contact Details -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Contact Number 1(Self)</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"contactNumber1\\\" [(ngModel)]=\\\"contactNumber1\\\"\\r\\n          required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Contact Number 2</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"contactNumber2\\\" [(ngModel)]=\\\"contactNumber2\\\"\\r\\n          required>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-12 col-md-12 col-lg-4\\\">\\r\\n        <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"inputSmall\\\">Contact Number 3</label>\\r\\n        <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" id=\\\"inputSmall\\\" name=\\\"contactNumber3\\\" [(ngModel)]=\\\"contactNumber3\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <br/>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onUpdateSubmit()\\\">Submit</button>\\r\\n  </fieldset>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/update-student/update-student.component.html\n// module id = ../../../../../src/app/components/update-student/update-student.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { StudentService } from \"../../services/student.service\";\r\nimport { SettingsService } from '../../services/settings.service';\r\n\r\n@Component({\r\n  selector: 'app-update-student',\r\n  templateUrl: './update-student.component.html',\r\n  styleUrls: ['./update-student.component.css']\r\n})\r\nexport class UpdateStudentComponent implements OnInit {\r\n\r\n  id;\r\n  error;\r\n  userId;\r\n  name;\r\n  address;\r\n  last;\r\n  branch;\r\n  stream;\r\n  category;\r\n  enrolledFor;\r\n  entrance;\r\n  course;\r\n  offeredSubjects;\r\n  classSession;\r\n  contactDetails?: string[] = [];\r\n  contactNumber1;\r\n  contactNumber2;\r\n  contactNumber3;\r\n  instituteName;\r\n  instituteTiming;\r\n  currentStandard;\r\n  isCombinedAdmission;\r\n  year;\r\n  academicYears;\r\n  isDeleted;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private studentService: StudentService,\r\n    private settingsService: SettingsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.id = this.route.snapshot.params['id'];\r\n\r\n    this.settingsService.listAcademicYears().subscribe(data => {\r\n      if (data.success) {\r\n        this.academicYears = data.years;\r\n      }\r\n      else {\r\n        this.error = data.msg.message;\r\n      }\r\n    });\r\n\r\n    this.studentService.getStudentDetailsById(this.id).subscribe(studentData => {\r\n      console.log(studentData.student);\r\n      this.userId = studentData.student._id;\r\n      this.name = studentData.student.name;\r\n      this.address = studentData.student.address;\r\n      this.instituteName = studentData.student.instituteInfo.name;\r\n      this.instituteTiming = studentData.student.instituteInfo.timing;\r\n      this.contactNumber1 = studentData.student.contactDetails[0];\r\n      this.contactNumber2 = studentData.student.contactDetails[1];\r\n      this.contactNumber3 = studentData.student.contactDetails[2];\r\n      this.enrolledFor = studentData.student.enrolledFor;\r\n      this.entrance = studentData.student.entrance;\r\n      this.course = studentData.student.course;\r\n      this.classSession = studentData.student.classSession;\r\n      this.branch = studentData.student.branch;\r\n      this.category = studentData.student.category;\r\n      this.stream = studentData.student.stream;\r\n      this.offeredSubjects = studentData.student.offeredSubjects;\r\n      this.year = studentData.student.currentYear;\r\n    });\r\n\r\n  }\r\n\r\n  onUpdateSubmit() {\r\n    if (this.contactNumber1 != null)\r\n      this.contactDetails.push(this.contactNumber1);\r\n    if (this.contactNumber2 != null)\r\n      this.contactDetails.push(this.contactNumber2);\r\n    if (this.contactNumber3 != null)\r\n      this.contactDetails.push(this.contactNumber3);\r\n\r\n    let studentToUpdate = {\r\n      _id: this.id,\r\n      userId: this.userId,\r\n      name: this.name,\r\n      address: this.address,\r\n      classSession: this.classSession,\r\n      category: this.category,\r\n      stream: this.stream,\r\n      branch: this.branch,\r\n      enrolledFor: this.enrolledFor,\r\n      course: (this.enrolledFor == \"X\") ? this.course : \"Regular\",\r\n      offeredSubjects: this.offeredSubjects,\r\n      instituteInfo: {\r\n        name: this.instituteName,\r\n        timing: this.instituteTiming\r\n      },\r\n      contactDetails: this.addContactDetails(),\r\n      isCombinedAdmission: (this.enrolledFor == \"XI + XII\"),\r\n      currentYear: this.year,\r\n      isDeleted: false\r\n    }\r\n\r\n    this.setCurrentStandard(studentToUpdate);\r\n\r\n    // add science related fields\r\n    if (this.checkIfScienceStream())\r\n      this.addScienceRelatedFields(studentToUpdate);\r\n\r\n    console.log(studentToUpdate);\r\n    this.studentService.updateStudent(studentToUpdate).subscribe(data => {\r\n      if (data.success) {\r\n        this.router.navigate(['/studentprofile/' + this.id]);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /******************* \r\n  / Helper functions\r\n  *******************/\r\n  addContactDetails() {\r\n    let contactDetails = [];\r\n\r\n    if (this.contactNumber1)\r\n      contactDetails.push(this.contactNumber1);\r\n    if (this.contactNumber2)\r\n      contactDetails.push(this.contactNumber2);\r\n    if (this.contactNumber3)\r\n      contactDetails.push(this.contactNumber3);\r\n\r\n    return contactDetails;\r\n  }\r\n\r\n  checkIfCollegeSection() {\r\n    return this.category == \"College Section\";\r\n  }\r\n\r\n  checkIfScienceStream() {\r\n    return this.stream == \"Science\";\r\n  }\r\n\r\n  checkIfCommerceStream() {\r\n    return this.stream == \"Commerce\";\r\n  }\r\n\r\n  checkIfArtsStream() {\r\n    return this.stream == \"Arts\";\r\n  }\r\n\r\n  // for sciecne stream specific fields\r\n  addScienceRelatedFields(newlyAddedStudent) {\r\n    newlyAddedStudent.entrance = this.entrance;\r\n    newlyAddedStudent.hasEnrolledForEntrance = (this.entrance != \"None\");\r\n  }\r\n\r\n  // sets current standard\r\n  // checks if admission is combined\r\n  setCurrentStandard(newlyAddedStudent) {\r\n    if (this.checkIfCollegeSection()) {\r\n      newlyAddedStudent.isCombinedAdmission = (this.enrolledFor == \"XI + XII\");\r\n    }\r\n    else\r\n      newlyAddedStudent.isCombinedAdmission = (this.enrolledFor == \"IX + X\");\r\n\r\n    if (this.checkIfScienceStream() || this.checkIfCommerceStream() || this.checkIfArtsStream()) {\r\n      newlyAddedStudent.currentStandard = this.enrolledFor == \"XI + XII\" ? \"XI\" : this.enrolledFor;\r\n    }\r\n    else\r\n      newlyAddedStudent.currentStandard = this.enrolledFor == \"IX + X\" ? \"IX\" : this.enrolledFor;\r\n  }\r\n\r\n  // unselects all radio inputs on change of category\r\n  unselectAll() {\r\n    this.stream = \"\";\r\n    this.enrolledFor = \"\";\r\n    this.entrance = \"\";\r\n    this.offeredSubjects = \"\";\r\n  }\r\n\r\n  showCourses() {\r\n    return (this.enrolledFor == \"IX\" || this.enrolledFor == \"X\"\r\n      || this.enrolledFor == \"XII\" || this.enrolledFor == \"XI + XII\");\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/update-student/update-student.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/user-profile/user-profile.component.css\n// module id = ../../../../../src/app/components/user-profile/user-profile.component.css\n// module chunks = main","module.exports = \"<div *ngIf= \\\"user\\\">\\r\\n  <h2 class=\\\"page-header\\\">{{user.name}}</h2>\\r\\n  <ul class=\\\"list-group\\\">\\r\\n    <li class=\\\"list-group-item\\\"><strong>Branch: {{user.branch}}</strong></li>\\r\\n    <li class=\\\"list-group-item\\\">Email: {{user.email}}</li>\\r\\n    <li class=\\\"list-group-item\\\">Phone Number: {{user.phoneNumber}}</li>\\r\\n    <li class=\\\"list-group-item\\\">Birth Date: {{user.birthDate}}</li>\\r\\n  </ul>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/user-profile/user-profile.component.html\n// module id = ../../../../../src/app/components/user-profile/user-profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.css']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n\r\n  user: Object;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.authService.getUserProfile().subscribe(profile => {\r\n      this.user = profile.user;\r\n    },\r\n      err => {\r\n        console.log(err);\r\n        return false;\r\n      })\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/components/user-profile/user-profile.component.ts","import { Injectable } from \"@angular/core\"; \r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router\r\n    ){}\r\n\r\n    canActivate(){\r\n        if(this.authService.loggedIn()){\r\n            return true;\r\n        }\r\n        else{\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/guards/auth.guard.ts","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'sortgrid'\r\n})\r\n\r\n@Injectable()\r\nexport class SortGridPipe implements PipeTransform {\r\n    transform(array: Array<any>, args: string): Array<any> {\r\n        if (typeof args[0] === \"undefined\") {\r\n            return array;\r\n        }\r\n        let direction = args[0][0];\r\n        let column = args.replace('-','');\r\n        array.sort((a: any, b: any) => {\r\n            let left = Number(new Date(a[column]));\r\n            let right = Number(new Date(b[column]));\r\n            return (direction === \"-\") ? right - left : left - right;\r\n        });\r\n        return array;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/pipes/SortGridPipe.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, URLSearchParams } from \"@angular/http\";\r\nimport 'rxjs/add/operator/map';\r\nimport { tokenNotExpired } from \"angular2-jwt\";\r\n\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  authToken: any;\r\n  user: any;\r\n\r\n  constructor(\r\n    private http: Http\r\n  ) { }\r\n\r\n  // Login\r\n  // Checks if user exists in the system\r\n  authenticateUser(user) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(environment.usersUrl.concat('authenticate'), user, { headers: headers })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  getUserProfile() {\r\n    let headers = new Headers();\r\n    this.loadToken();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    \r\n    return this.http.get(environment.usersUrl.concat('profile'), { headers: headers })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  getUserProfileById(userId) {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n    \r\n    let params: URLSearchParams  = new URLSearchParams();\r\n    params.set(\"userId\", userId);\r\n\r\n    return this.http.get(environment.usersUrl.concat('getUserProfileById'), { headers: headers, params: params })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  loggedIn() {\r\n    return tokenNotExpired('id_token');\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  // Fucntion to stire user record in localstorage\r\n  storeUserData(token, user, currentYear) {\r\n    // add current year here\r\n    console.log(\"storeUserData\");\r\n    localStorage.setItem('currentYear', currentYear);\r\n    localStorage.setItem('id_token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    localStorage.setItem('branch', user.branch);\r\n    this.authToken = token;\r\n    this.user = user;\r\n  }\r\n\r\n  // Logout\r\n  // Logs out the currently logged in user\r\n  logout() {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, URLSearchParams } from \"@angular/http\";\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class FeesdetailsService {\r\n\r\n  authToken: any;\r\n\r\n  constructor(\r\n    private http:Http\r\n  ) { }\r\n\r\n\r\n  // Add Fees record\r\n  addNewFeesdetails(fees){\r\n    return this.http.post(environment.feesDetailsUrl.concat('addNewFeesdetails'), fees, {headers: this.setHeaders()})\r\n      .map(res => res.json());\r\n  }\r\n\r\n  // Get Fees Details by Id\r\n  getFeesDetailsById(feesDetailId){\r\n    let params: URLSearchParams  = new URLSearchParams();\r\n    params.set(\"feesDetailId\", feesDetailId);\r\n\r\n    return this.http.get(environment.feesDetailsUrl.concat('getFeesDetailsById'), { headers: this.setHeaders(), params: params })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  // Get Fees Details by StudentId\r\n  getFeesDetailsByStudentId(studentId){\r\n    let params: URLSearchParams  = new URLSearchParams();\r\n    params.set(\"studentId\", studentId);\r\n\r\n    return this.http.get(environment.feesDetailsUrl.concat('getFeesDetailsByStudentId'), { headers: this.setHeaders(), params: params })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  // Update fees details\r\n  updateFeesDetails(fees){\r\n    return this.http.post(environment.feesDetailsUrl.concat('updateFeesDetails'), fees, {headers: this.setHeaders()})\r\n      .map(res => res.json());\r\n  }\r\n\r\n  setHeaders(){\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return headers;\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/feesdetails.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, URLSearchParams } from \"@angular/http\";\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class PaymentService {\r\n\r\n  authToken: any;\r\n\r\n  constructor(\r\n    private http: Http\r\n  ) { }\r\n\r\n  // Dashboard - Balance Fees\r\n  showBalanceFeesOnDashboard(){\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set(\"isPaid\", \"false\");\r\n    params.set(\"branch\", localStorage.getItem('branch'));\r\n\r\n    return this.http.get(environment.paymentsUrl.concat('showBalanceFeesOnDashboard'), { headers: this.setHeaders(), params : params })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  // Dashboard - Pending cheques\r\n  showPendingChequeEntries(){\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set(\"isChequeCleared\", \"false\");\r\n    params.set(\"branch\", localStorage.getItem('branch'));\r\n\r\n    return this.http.get(environment.paymentsUrl.concat('showPendingChequeEntries'), { headers: this.setHeaders(), params : params })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  // Add New Payment\r\n  addNewPayment(payment) {\r\n    payment.branch = localStorage.getItem('branch');\r\n\r\n    return this.http.post(environment.paymentsUrl.concat('addNewPayment'), payment, { headers: this.setHeaders() })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  // get payment record by id\r\n  getPaymentRecordById(paymentId) {\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set(\"paymentId\", paymentId);\r\n\r\n    return this.http.get(environment.paymentsUrl.concat('getPaymentById'), { headers: this.setHeaders(), params: params })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  // get payment record by StudentId\r\n  getPaymentRecordByStudentId(studentId) {\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set(\"studentId\", studentId);\r\n\r\n    return this.http.get(environment.paymentsUrl.concat('getPaymentRecordByStudentId'), { headers: this.setHeaders(), params: params })\r\n      .map(res => res.json());\r\n  }\r\n  \r\n  // Update Payment record\r\n  updatePaymentDetails(payment) {\r\n    console.log(\"service: updatePaymentDetails\");\r\n    return this.http.post(environment.paymentsUrl.concat('updatePaymentDetails'), payment, { headers: this.setHeaders() })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  setHeaders() {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return headers;\r\n  }\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/payment.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, URLSearchParams } from \"@angular/http\";\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class SettingsService {\r\n\r\n  authToken: any;\r\n\r\n  constructor(\r\n    private http: Http\r\n  ) { }\r\n\r\n  setCurrentYear(yearToUpdate) {\r\n    return this.http.post(environment.settingsUrl.concat('setCurrentYear'), yearToUpdate, { headers: this.setHeaders() })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  getCurrentYear() {\r\n    return this.http.get(environment.settingsUrl.concat('getCurrentYear'), { headers: this.setHeaders() })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  getBatchById(id){\r\n    let params: URLSearchParams  = new URLSearchParams();\r\n    params.set(\"id\", id);\r\n\r\n    return this.http.get(environment.settingsUrl.concat('getBatchById'), { headers: this.setHeaders(), params: params })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  addBatch(batch) {\r\n    batch.branch = localStorage.getItem('branch');\r\n    console.log(batch);\r\n\r\n    return this.http.post(environment.settingsUrl.concat('addBatch'), batch, { headers: this.setHeaders() })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  editBatch(batchToUpdate) {\r\n    console.log(batchToUpdate);\r\n\r\n    return this.http.post(environment.settingsUrl.concat('editBatch'), batchToUpdate, { headers: this.setHeaders() })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  addAcademicYear(academicYear) {\r\n    return this.http.post(environment.settingsUrl.concat('addAcademicYear'), academicYear, { headers: this.setHeaders() })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  listBatches(year?) {\r\n    let params: URLSearchParams = new URLSearchParams();\r\n\r\n    if (year)\r\n      params.set(\"year\", year);\r\n    else\r\n      params.set(\"year\", localStorage.getItem('currentYear'));\r\n\r\n    params.set(\"branch\", localStorage.getItem('branch'));\r\n\r\n\r\n    return this.http.get(environment.settingsUrl.concat('listBatches'), { headers: this.setHeaders(), params: params })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  listAcademicYears() {\r\n    return this.http.get(environment.settingsUrl.concat('listAcademicYears'), { headers: this.setHeaders() })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  setHeaders() {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return headers;\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/settings.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers, URLSearchParams } from \"@angular/http\";\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class StudentService {\r\n\r\n  authToken: any;\r\n\r\n  constructor(\r\n    private http: Http\r\n  ) { }\r\n\r\n  // Register \r\n  // Register new user\r\n  addNewStudent(student) {\r\n    student.branch = localStorage.getItem('branch');\r\n    console.log(\"current branch is for newly added student is \" + student.branch);\r\n\r\n    return this.http.post(environment.studentsUrl.concat('addNewStudent'), student, { headers: this.setHeaders() })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  // Update student information\r\n  updateStudent(student) {\r\n    console.log(\"service: updateStudent\");\r\n    return this.http.post(environment.studentsUrl.concat('updateStudentInfo'), student, { headers: this.setHeaders() })\r\n      .map(res => res.json());\r\n  }\r\n\r\n\r\n  // Get Student by Id\r\n  getStudentDetailsById(studentId) {\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set(\"studentId\", studentId);\r\n\r\n    return this.http.get(environment.studentsUrl.concat('getStudentDetailsById'), { headers: this.setHeaders(), params: params })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  searchStudentByName(name){\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set(\"name\", name);\r\n    params.set(\"branch\", localStorage.getItem('branch'));\r\n\r\n    return this.http.get(environment.studentsUrl.concat('searchStudentByName'), { headers: this.setHeaders(), params: params })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  // Search School section Students By Parameters\r\n  searchSchoolSectionStudents(category, stream, enrolledFor, course, classSession) {\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set(\"branch\", localStorage.getItem(\"branch\"));\r\n    params.set(\"category\", category);\r\n    params.set(\"stream\", stream);\r\n    params.set(\"enrolledFor\", enrolledFor);\r\n    params.set(\"course\", course);\r\n    params.set(\"classSession\", classSession);\r\n\r\n    return this.http.get(environment.studentsUrl.concat('searchSchoolSectionStudents'), { headers: this.setHeaders(), params: params })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  searchCollegeSectionStudents(category, stream, enrolledFor, course, classSession, entrance?) {\r\n    let params: URLSearchParams = new URLSearchParams();\r\n    params.set(\"branch\", localStorage.getItem(\"branch\"));\r\n    params.set(\"category\", category);\r\n    params.set(\"stream\", stream);\r\n    params.set(\"enrolledFor\", enrolledFor);\r\n    params.set(\"course\", course);\r\n    params.set(\"classSession\", classSession);\r\n\r\n    if(entrance)\r\n      params.set(\"entrance\", entrance);\r\n\r\n    return this.http.get(environment.studentsUrl.concat('searchCollegeSectionStudents'), { headers: this.setHeaders(), params: params })\r\n      .map(res => res.json());\r\n  }\r\n\r\n  setHeaders() {\r\n    let headers = new Headers();\r\n    headers.append('Authorization', this.authToken);\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return headers;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/student.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from \"@angular/http\";\r\nimport 'rxjs/add/operator/map';\r\n\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n\r\n  constructor(\r\n    private http: Http\r\n  ) { }\r\n\r\n  // Register \r\n  // Register new user\r\n  registerUser(user) {\r\n    if (!user.isAdmin) {\r\n      user.branch = localStorage.getItem('branch');\r\n      console.log(\"current branch is for newly added student is \" + user.branch);\r\n    }\r\n\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(environment.usersUrl.concat('registerUser'), user, { headers: headers })\r\n      .map(res => res.json());\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/users.service.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  validateEmail(email){\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/app/services/validate.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  usersUrl: \"/users/\",\r\n  feesDetailsUrl: \"/feesdetails/\",\r\n  paymentsUrl: \"/payments/\",\r\n  studentsUrl: \"/students/\",\r\n  settingsUrl: \"/settings/\"\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Krishna/Documents/bitbucket/edusoft/angular-src/src/main.ts"],"sourceRoot":"webpack:///"}